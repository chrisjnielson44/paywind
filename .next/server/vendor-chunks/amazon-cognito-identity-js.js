"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/amazon-cognito-identity-js";
exports.ids = ["vendor-chunks/amazon-cognito-identity-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/AuthenticationDetails.js":
/*!******************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/AuthenticationDetails.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n/** @class */\nvar AuthenticationDetails = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AuthenticationDetails object\n   * @param {object=} data Creation options.\n   * @param {string} data.Username User being authenticated.\n   * @param {string} data.Password Plain-text password to authenticate with.\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n   * @param {(AttributeArg[])?} data.AuthParamaters Authentication paramaters for custom auth.\n   */\n  function AuthenticationDetails(data) {\n    var _ref = data || {},\n      ValidationData = _ref.ValidationData,\n      Username = _ref.Username,\n      Password = _ref.Password,\n      AuthParameters = _ref.AuthParameters,\n      ClientMetadata = _ref.ClientMetadata;\n    this.validationData = ValidationData || {};\n    this.authParameters = AuthParameters || {};\n    this.clientMetadata = ClientMetadata || {};\n    this.username = Username;\n    this.password = Password;\n  }\n\n  /**\n   * @returns {string} the record's username\n   */\n  var _proto = AuthenticationDetails.prototype;\n  _proto.getUsername = function getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {string} the record's password\n   */;\n  _proto.getPassword = function getPassword() {\n    return this.password;\n  }\n\n  /**\n   * @returns {Array} the record's validationData\n   */;\n  _proto.getValidationData = function getValidationData() {\n    return this.validationData;\n  }\n\n  /**\n   * @returns {Array} the record's authParameters\n   */;\n  _proto.getAuthParameters = function getAuthParameters() {\n    return this.authParameters;\n  }\n\n  /**\n   * @returns {ClientMetadata} the clientMetadata for a Lambda trigger\n   */;\n  _proto.getClientMetadata = function getClientMetadata() {\n    return this.clientMetadata;\n  };\n  return AuthenticationDetails;\n}();\nexports[\"default\"] = AuthenticationDetails;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0F1dGhlbnRpY2F0aW9uRGV0YWlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLG1CQUFtQjtBQUNoQyxhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGF5d2luZC8uL25vZGVfbW9kdWxlcy9hbWF6b24tY29nbml0by1pZGVudGl0eS1qcy9saWIvQXV0aGVudGljYXRpb25EZXRhaWxzLmpzP2Q1YzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbi8qIVxuICogQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG4vKiogQGNsYXNzICovXG52YXIgQXV0aGVudGljYXRpb25EZXRhaWxzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBuZXcgQXV0aGVudGljYXRpb25EZXRhaWxzIG9iamVjdFxuICAgKiBAcGFyYW0ge29iamVjdD19IGRhdGEgQ3JlYXRpb24gb3B0aW9ucy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGEuVXNlcm5hbWUgVXNlciBiZWluZyBhdXRoZW50aWNhdGVkLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YS5QYXNzd29yZCBQbGFpbi10ZXh0IHBhc3N3b3JkIHRvIGF1dGhlbnRpY2F0ZSB3aXRoLlxuICAgKiBAcGFyYW0geyhBdHRyaWJ1dGVBcmdbXSk/fSBkYXRhLlZhbGlkYXRpb25EYXRhIEFwcGxpY2F0aW9uIGV4dHJhIG1ldGFkYXRhLlxuICAgKiBAcGFyYW0geyhBdHRyaWJ1dGVBcmdbXSk/fSBkYXRhLkF1dGhQYXJhbWF0ZXJzIEF1dGhlbnRpY2F0aW9uIHBhcmFtYXRlcnMgZm9yIGN1c3RvbSBhdXRoLlxuICAgKi9cbiAgZnVuY3Rpb24gQXV0aGVudGljYXRpb25EZXRhaWxzKGRhdGEpIHtcbiAgICB2YXIgX3JlZiA9IGRhdGEgfHwge30sXG4gICAgICBWYWxpZGF0aW9uRGF0YSA9IF9yZWYuVmFsaWRhdGlvbkRhdGEsXG4gICAgICBVc2VybmFtZSA9IF9yZWYuVXNlcm5hbWUsXG4gICAgICBQYXNzd29yZCA9IF9yZWYuUGFzc3dvcmQsXG4gICAgICBBdXRoUGFyYW1ldGVycyA9IF9yZWYuQXV0aFBhcmFtZXRlcnMsXG4gICAgICBDbGllbnRNZXRhZGF0YSA9IF9yZWYuQ2xpZW50TWV0YWRhdGE7XG4gICAgdGhpcy52YWxpZGF0aW9uRGF0YSA9IFZhbGlkYXRpb25EYXRhIHx8IHt9O1xuICAgIHRoaXMuYXV0aFBhcmFtZXRlcnMgPSBBdXRoUGFyYW1ldGVycyB8fCB7fTtcbiAgICB0aGlzLmNsaWVudE1ldGFkYXRhID0gQ2xpZW50TWV0YWRhdGEgfHwge307XG4gICAgdGhpcy51c2VybmFtZSA9IFVzZXJuYW1lO1xuICAgIHRoaXMucGFzc3dvcmQgPSBQYXNzd29yZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgcmVjb3JkJ3MgdXNlcm5hbWVcbiAgICovXG4gIHZhciBfcHJvdG8gPSBBdXRoZW50aWNhdGlvbkRldGFpbHMucHJvdG90eXBlO1xuICBfcHJvdG8uZ2V0VXNlcm5hbWUgPSBmdW5jdGlvbiBnZXRVc2VybmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy51c2VybmFtZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgcmVjb3JkJ3MgcGFzc3dvcmRcbiAgICovO1xuICBfcHJvdG8uZ2V0UGFzc3dvcmQgPSBmdW5jdGlvbiBnZXRQYXNzd29yZCgpIHtcbiAgICByZXR1cm4gdGhpcy5wYXNzd29yZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7QXJyYXl9IHRoZSByZWNvcmQncyB2YWxpZGF0aW9uRGF0YVxuICAgKi87XG4gIF9wcm90by5nZXRWYWxpZGF0aW9uRGF0YSA9IGZ1bmN0aW9uIGdldFZhbGlkYXRpb25EYXRhKCkge1xuICAgIHJldHVybiB0aGlzLnZhbGlkYXRpb25EYXRhO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtBcnJheX0gdGhlIHJlY29yZCdzIGF1dGhQYXJhbWV0ZXJzXG4gICAqLztcbiAgX3Byb3RvLmdldEF1dGhQYXJhbWV0ZXJzID0gZnVuY3Rpb24gZ2V0QXV0aFBhcmFtZXRlcnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aFBhcmFtZXRlcnM7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge0NsaWVudE1ldGFkYXRhfSB0aGUgY2xpZW50TWV0YWRhdGEgZm9yIGEgTGFtYmRhIHRyaWdnZXJcbiAgICovO1xuICBfcHJvdG8uZ2V0Q2xpZW50TWV0YWRhdGEgPSBmdW5jdGlvbiBnZXRDbGllbnRNZXRhZGF0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnRNZXRhZGF0YTtcbiAgfTtcbiAgcmV0dXJuIEF1dGhlbnRpY2F0aW9uRGV0YWlscztcbn0oKTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gQXV0aGVudGljYXRpb25EZXRhaWxzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/AuthenticationDetails.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/AuthenticationHelper.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/AuthenticationHelper.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _buffer = __webpack_require__(/*! buffer */ \"buffer\");\nvar _WordArray = _interopRequireDefault(__webpack_require__(/*! ./utils/WordArray */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/utils/WordArray.js\"));\nvar _sha256Js = __webpack_require__(/*! @aws-crypto/sha256-js */ \"(ssr)/./node_modules/@aws-crypto/sha256-js/build/index.js\");\nvar _BigInteger = _interopRequireDefault(__webpack_require__(/*! ./BigInteger */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/BigInteger.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Returns a Buffer with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Buffer} fixed-length sequence of random bytes\n */\n\nfunction randomBytes(nBytes) {\n  return _buffer.Buffer.from(new _WordArray[\"default\"]().random(nBytes).toString(), 'hex');\n}\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nvar HEX_MSB_REGEX = /^[89a-f]/i;\nvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n\n/** @class */\nvar AuthenticationHelper = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   */\n  function AuthenticationHelper(PoolName) {\n    this.N = new _BigInteger[\"default\"](initN, 16);\n    this.g = new _BigInteger[\"default\"]('2', 16);\n    this.k = new _BigInteger[\"default\"](this.hexHash(\"\" + this.padHex(this.N) + this.padHex(this.g)), 16);\n    this.smallAValue = this.generateRandomSmallA();\n    this.getLargeAValue(function () {});\n    this.infoBits = _buffer.Buffer.from('Caldera Derived Key', 'utf8');\n    this.poolName = PoolName;\n  }\n\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n  var _proto = AuthenticationHelper.prototype;\n  _proto.getSmallAValue = function getSmallAValue() {\n    return this.smallAValue;\n  }\n\n  /**\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   */;\n  _proto.getLargeAValue = function getLargeAValue(callback) {\n    var _this = this;\n    if (this.largeAValue) {\n      callback(null, this.largeAValue);\n    } else {\n      this.calculateA(this.smallAValue, function (err, largeAValue) {\n        if (err) {\n          callback(err, null);\n        }\n        _this.largeAValue = largeAValue;\n        callback(null, _this.largeAValue);\n      });\n    }\n  }\n\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */;\n  _proto.generateRandomSmallA = function generateRandomSmallA() {\n    // This will be interpreted as a postive 128-bit integer\n    var hexRandom = randomBytes(128).toString('hex');\n    var randomBigInt = new _BigInteger[\"default\"](hexRandom, 16);\n\n    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n\n    return randomBigInt;\n  }\n\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */;\n  _proto.generateRandomString = function generateRandomString() {\n    return randomBytes(40).toString('base64');\n  }\n\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */;\n  _proto.getRandomPassword = function getRandomPassword() {\n    return this.randomPassword;\n  }\n\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */;\n  _proto.getSaltDevices = function getSaltDevices() {\n    return this.SaltToHashDevices;\n  }\n\n  /**\n   * @returns {string} Value used to verify devices.\n   */;\n  _proto.getVerifierDevices = function getVerifierDevices() {\n    return this.verifierDevices;\n  }\n\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @param {nodeCallback<null>} callback Called with (err, null)\n   * @returns {void}\n   */;\n  _proto.generateHashDevice = function generateHashDevice(deviceGroupKey, username, callback) {\n    var _this2 = this;\n    this.randomPassword = this.generateRandomString();\n    var combinedString = \"\" + deviceGroupKey + username + \":\" + this.randomPassword;\n    var hashedString = this.hash(combinedString);\n    var hexRandom = randomBytes(16).toString('hex');\n\n    // The random hex will be unambiguously represented as a postive integer\n    this.SaltToHashDevices = this.padHex(new _BigInteger[\"default\"](hexRandom, 16));\n    this.g.modPow(new _BigInteger[\"default\"](this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\n      if (err) {\n        callback(err, null);\n      }\n      _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\n      callback(null, null);\n    });\n  }\n\n  /**\n   * Calculate the client's public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   * @private\n   */;\n  _proto.calculateA = function calculateA(a, callback) {\n    var _this3 = this;\n    this.g.modPow(a, this.N, function (err, A) {\n      if (err) {\n        callback(err, null);\n      }\n      if (A.mod(_this3.N).equals(_BigInteger[\"default\"].ZERO)) {\n        callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\n      }\n      callback(null, A);\n    });\n  }\n\n  /**\n   * Calculate the client's value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */;\n  _proto.calculateU = function calculateU(A, B) {\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n    var finalU = new _BigInteger[\"default\"](this.UHexHash, 16);\n    return finalU;\n  }\n\n  /**\n   * Calculate a hash from a bitArray\n   * @param {Buffer} buf Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */;\n  _proto.hash = function hash(buf) {\n    var awsCryptoHash = new _sha256Js.Sha256();\n    awsCryptoHash.update(buf);\n    var resultFromAWSCrypto = awsCryptoHash.digestSync();\n    var hashHex = _buffer.Buffer.from(resultFromAWSCrypto).toString('hex');\n    return new Array(64 - hashHex.length).join('0') + hashHex;\n  }\n\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */;\n  _proto.hexHash = function hexHash(hexStr) {\n    return this.hash(_buffer.Buffer.from(hexStr, 'hex'));\n  }\n\n  /**\n   * Standard hkdf algorithm\n   * @param {Buffer} ikm Input key material.\n   * @param {Buffer} salt Salt value.\n   * @returns {Buffer} Strong key material.\n   * @private\n   */;\n  _proto.computehkdf = function computehkdf(ikm, salt) {\n    var infoBitsBuffer = _buffer.Buffer.concat([this.infoBits, _buffer.Buffer.from(String.fromCharCode(1), 'utf8')]);\n    var awsCryptoHash = new _sha256Js.Sha256(salt);\n    awsCryptoHash.update(ikm);\n    var resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    var awsCryptoHashHmac = new _sha256Js.Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(infoBitsBuffer);\n    var resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    var hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    var currentHex = hashHexFromAWSCrypto.slice(0, 16);\n    return currentHex;\n  }\n\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @param {nodeCallback<Buffer>} callback Called with (err, hkdfValue)\n   * @returns {void}\n   */;\n  _proto.getPasswordAuthenticationKey = function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\n    var _this4 = this;\n    if (serverBValue.mod(this.N).equals(_BigInteger[\"default\"].ZERO)) {\n      throw new Error('B cannot be zero.');\n    }\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n    if (this.UValue.equals(_BigInteger[\"default\"].ZERO)) {\n      throw new Error('U cannot be zero.');\n    }\n    var usernamePassword = \"\" + this.poolName + username + \":\" + password;\n    var usernamePasswordHash = this.hash(usernamePassword);\n    var xValue = new _BigInteger[\"default\"](this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n    this.calculateS(xValue, serverBValue, function (err, sValue) {\n      if (err) {\n        callback(err, null);\n      }\n      var hkdf = _this4.computehkdf(_buffer.Buffer.from(_this4.padHex(sValue), 'hex'), _buffer.Buffer.from(_this4.padHex(_this4.UValue), 'hex'));\n      callback(null, hkdf);\n    });\n  }\n\n  /**\n   * Calculates the S value used in getPasswordAuthenticationKey\n   * @param {BigInteger} xValue Salted password hash value.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.calculateS = function calculateS(xValue, serverBValue, callback) {\n    var _this5 = this;\n    this.g.modPow(xValue, this.N, function (err, gModPowXN) {\n      if (err) {\n        callback(err, null);\n      }\n      var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\n      intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\n        if (err2) {\n          callback(err2, null);\n        }\n        callback(null, result.mod(_this5.N));\n      });\n    });\n  }\n\n  /**\n   * Return constant newPasswordRequiredChallengeUserAttributePrefix\n   * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n   */;\n  _proto.getNewPasswordRequiredChallengeUserAttributePrefix = function getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  }\n\n  /**\n   * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n   *\n   * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n   * byte array containing the two's-complement representation of a BigInteger. The array contains\n   * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n   *\n   * Examples showing how ambiguity is avoided by left padding with:\n   * \t\"00\" (for positive values where the most-significant-bit is set)\n   *  \"FF\" (for negative values where the most-significant-bit is set)\n   *\n   * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n   * padHex(bigInteger.fromInt(20))    === \"14\"\n   *\n   * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n   * padHex(bigInteger.fromInt(56))    === \"38\"\n   *\n   * padHex(bigInteger.fromInt(-20))   === \"EC\"\n   * padHex(bigInteger.fromInt(236))   === \"00EC\"\n   *\n   * padHex(bigInteger.fromInt(-56))   === \"C8\"\n   * padHex(bigInteger.fromInt(200))   === \"00C8\"\n   *\n   * @param {BigInteger} bigInt Number to encode.\n   * @returns {String} even-length hex string of the two's complement encoding.\n   */;\n  _proto.padHex = function padHex(bigInt) {\n    if (!(bigInt instanceof _BigInteger[\"default\"])) {\n      throw new Error('Not a BigInteger');\n    }\n    var isNegative = bigInt.compareTo(_BigInteger[\"default\"].ZERO) < 0;\n\n    /* Get a hex string for abs(bigInt) */\n    var hexStr = bigInt.abs().toString(16);\n\n    /* Pad hex to even length if needed */\n    hexStr = hexStr.length % 2 !== 0 ? \"0\" + hexStr : hexStr;\n\n    /* Prepend \"00\" if the most significant bit is set */\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? \"00\" + hexStr : hexStr;\n    if (isNegative) {\n      /* Flip the bits of the representation */\n      var invertedNibbles = hexStr.split('').map(function (x) {\n        var invertedNibble = ~parseInt(x, 16) & 0xf;\n        return '0123456789ABCDEF'.charAt(invertedNibble);\n      }).join('');\n\n      /* After flipping the bits, add one to get the 2's complement representation */\n      var flippedBitsBI = new _BigInteger[\"default\"](invertedNibbles, 16).add(_BigInteger[\"default\"].ONE);\n      hexStr = flippedBitsBI.toString(16);\n\n      /*\n      For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n      \t\tAny sequence of '1' bits on the left can always be substituted with a single '1' bit\n      without changing the represented value.\n      \t\tThis only happens in the case when the input is 80...00\n      */\n      if (hexStr.toUpperCase().startsWith('FF8')) {\n        hexStr = hexStr.substring(2);\n      }\n    }\n    return hexStr;\n  };\n  return AuthenticationHelper;\n}();\nexports[\"default\"] = AuthenticationHelper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/AuthenticationHelper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/BigInteger.js":
/*!*******************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/BigInteger.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nvar _default = BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nexports[\"default\"] = _default;\nfunction BigInteger(a, b) {\n  if (a != null) this.fromString(a, b);\n}\n\n// return new, unset BigInteger\nfunction nbi() {\n  return new BigInteger(null);\n}\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = (canary & 0xffffff) == 0xefcafe;\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n    xh = x >> 15;\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n    xh = x >> 14;\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff;\n    var h = this[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n  return c;\n}\nvar inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName == 'Microsoft Internet Explorer') {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (inBrowser && j_lm && navigator.appName != 'Netscape') {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\n// Digit conversions\nvar BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nvar BI_RC = new Array();\nvar rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) {\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n}\n\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n    mi = false,\n    sh = 0;\n  while (--i >= 0) {\n    var x = intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) == '-') mi = true;\n      continue;\n    }\n    mi = false;\n    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n  while (this.t > 0 && this[this.t - 1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if (this.s < 0) return '-' + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  var km = (1 << k) - 1,\n    d,\n    m = false,\n    r = '',\n    i = this.t;\n  var p = this.DB - i * this.DB % k;\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n  return m ? r : '0';\n}\n\n// (public) -this\nfunction bnNegate() {\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n}\n\n// (public) |this|\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n  while (--i >= 0) if ((r = this[i] - a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1,\n    t;\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  var i;\n  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n  for (i = n - 1; i >= 0; --i) r[i] = 0;\n  r.t = this.t + n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) r[i - n] = this[i];\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n    c = this.s << bs & this.DM,\n    i;\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n  for (i = ds - 1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n  for (var i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c -= a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n    y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n  while (--i >= 0) r[i] = 0;\n  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n  while (--i >= 0) r[i] = 0;\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n  if (r == null) r = nbi();\n  var y = nbi(),\n    ts = this.s,\n    ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]);\n  // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n    d2 = (1 << this.F1) / yt,\n    e = 1 << this.F2;\n  var i = r.t,\n    j = i - ys,\n    t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y);\n  // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) y[y.t++] = 0;\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n      while (r[i] < --qd) r.subTo(t, r);\n    }\n  }\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r);\n  // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n}\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3;\n  // y == 1/x mod 2^2\n  y = y * (2 - (x & 0xf) * y) & 0xf;\n  // y == 1/x mod 2^4\n  y = y * (2 - (x & 0xff) * y) & 0xff;\n  // y == 1/x mod 2^8\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff;\n  // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = y * (2 - x * y % this.DV) % this.DV;\n  // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n}\n\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c += a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n}\n\n// (public) this + a\nfunction bnAdd(a) {\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n}\n\n// (public) this - a\nfunction bnSubtract(a) {\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n}\n\n// (public) this * a\nfunction bnMultiply(a) {\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n}\n\n// (public) this / a\nfunction bnDivide(a) {\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2)\n  // pad x so am has enough room later\n  x[x.t++] = 0;\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n    // propagate carry\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n  var i = e.bitLength(),\n    k,\n    r = nbv(1),\n    z = new Montgomery(m);\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n\n  // precomputation\n  var g = new Array(),\n    n = 3,\n    k1 = k - 1,\n    km = (1 << k) - 1;\n  g[1] = z.convert(this);\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n  var j = e.t - 1,\n    w,\n    is1 = true,\n    r2 = nbi(),\n    t;\n  i = nbits(e[j]) - 1;\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n  var result = z.revert(r);\n  callback(null, result);\n  return result;\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/BigInteger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/Client.js":
/*!***************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/Client.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n__webpack_require__(/*! isomorphic-unfetch */ \"(ssr)/./node_modules/isomorphic-unfetch/index.js\");\nvar _UserAgent = __webpack_require__(/*! ./UserAgent */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/UserAgent.js\");\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar CognitoError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(CognitoError, _Error);\n  function CognitoError(message, code, name, statusCode) {\n    var _this;\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.name = name;\n    _this.statusCode = statusCode;\n    return _this;\n  }\n  return CognitoError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/** @class */\nvar Client = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   * @param {object} fetchOptions options for fetch API (only credentials is supported)\n   */\n  function Client(region, endpoint, fetchOptions) {\n    this.endpoint = endpoint || \"https://cognito-idp.\" + region + \".amazonaws.com/\";\n    var _ref = fetchOptions || {},\n      credentials = _ref.credentials;\n    this.fetchOptions = credentials ? {\n      credentials: credentials\n    } : {};\n  }\n\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @returns Promise<object>\n   */\n  var _proto = Client.prototype;\n  _proto.promisifyRequest = function promisifyRequest(operation, params) {\n    var _this2 = this;\n    return new Promise(function (resolve, reject) {\n      _this2.request(operation, params, function (err, data) {\n        if (err) {\n          reject(new CognitoError(err.message, err.code, err.name, err.statusCode));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  };\n  _proto.requestWithRetry = function requestWithRetry(operation, params, callback) {\n    var _this3 = this;\n    var MAX_DELAY_IN_MILLIS = 5 * 1000;\n    jitteredExponentialRetry(function (p) {\n      return new Promise(function (res, rej) {\n        _this3.request(operation, p, function (error, result) {\n          if (error) {\n            rej(error);\n          } else {\n            res(result);\n          }\n        });\n      });\n    }, [params], MAX_DELAY_IN_MILLIS).then(function (result) {\n      return callback(null, result);\n    })[\"catch\"](function (error) {\n      return callback(error);\n    });\n  }\n\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n   */;\n  _proto.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': \"AWSCognitoIdentityProviderService.\" + operation,\n      'X-Amz-User-Agent': (0, _UserAgent.getAmplifyUserAgent)(),\n      'Cache-Control': 'no-store'\n    };\n    var options = Object.assign({}, this.fetchOptions, {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      body: JSON.stringify(params)\n    });\n    var response;\n    var responseJsonData;\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n      throw err;\n    }).then(function (resp) {\n      return resp.json()[\"catch\"](function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data;\n\n      // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n      var code = (data.__type || data.code).split('#').pop();\n      var error = new Error(data.message || data.Message || null);\n      error.name = code;\n      error.code = code;\n      return callback(error);\n    })[\"catch\"](function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = new Error(response.status ? response.status.toString() : null);\n          error.code = code;\n          error.name = code;\n          error.statusCode = response.status;\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        }\n        // otherwise check if error is Network error\n      } else if (err instanceof Error && err.message === 'Network error') {\n        err.code = 'NetworkError';\n      }\n      return callback(err);\n    });\n  };\n  return Client;\n}();\nexports[\"default\"] = Client;\nvar logger = {\n  debug: function debug() {\n    // Intentionally blank. This package doesn't have logging\n  }\n};\n\n/**\n * For now, all errors are retryable.\n */\nvar NonRetryableError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(NonRetryableError, _Error2);\n  function NonRetryableError(message) {\n    var _this4;\n    _this4 = _Error2.call(this, message) || this;\n    _this4.nonRetryable = true;\n    return _this4;\n  }\n  return NonRetryableError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar isNonRetryableError = function isNonRetryableError(obj) {\n  var key = 'nonRetryable';\n  return obj && obj[key];\n};\nfunction retry(functionToRetry, args, delayFn, attempt) {\n  if (attempt === void 0) {\n    attempt = 1;\n  }\n  if (typeof functionToRetry !== 'function') {\n    throw Error('functionToRetry must be a function');\n  }\n  logger.debug(functionToRetry.name + \" attempt #\" + attempt + \" with args: \" + JSON.stringify(args));\n  return functionToRetry.apply(void 0, args)[\"catch\"](function (err) {\n    logger.debug(\"error on \" + functionToRetry.name, err);\n    if (isNonRetryableError(err)) {\n      logger.debug(functionToRetry.name + \" non retryable error\", err);\n      throw err;\n    }\n    var retryIn = delayFn(attempt, args, err);\n    logger.debug(functionToRetry.name + \" retrying in \" + retryIn + \" ms\");\n    if (retryIn !== false) {\n      return new Promise(function (res) {\n        return setTimeout(res, retryIn);\n      }).then(function () {\n        return retry(functionToRetry, args, delayFn, attempt + 1);\n      });\n    } else {\n      throw err;\n    }\n  });\n}\nfunction jitteredBackoff(maxDelayMs) {\n  var BASE_TIME_MS = 100;\n  var JITTER_FACTOR = 100;\n  return function (attempt) {\n    var delay = Math.pow(2, attempt) * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n    return delay > maxDelayMs ? false : delay;\n  };\n}\nvar MAX_DELAY_MS = 5 * 60 * 1000;\nfunction jitteredExponentialRetry(functionToRetry, args, maxDelayMs) {\n  if (maxDelayMs === void 0) {\n    maxDelayMs = MAX_DELAY_MS;\n  }\n  return retry(functionToRetry, args, jitteredBackoff(maxDelayMs));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/Client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoAccessToken.js":
/*!***************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoAccessToken.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _CognitoJwtToken2 = _interopRequireDefault(__webpack_require__(/*! ./CognitoJwtToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoJwtToken.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); } /*!\n                                                                                                                                                                                                          * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n                                                                                                                                                                                                          * SPDX-License-Identifier: Apache-2.0\n                                                                                                                                                                                                          */\n/** @class */\nvar CognitoAccessToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoAccessToken, _CognitoJwtToken);\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  function CognitoAccessToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      AccessToken = _ref.AccessToken;\n    return _CognitoJwtToken.call(this, AccessToken || '') || this;\n  }\n  return CognitoAccessToken;\n}(_CognitoJwtToken2[\"default\"]);\nexports[\"default\"] = CognitoAccessToken;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9BY2Nlc3NUb2tlbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLCtDQUErQyxtQkFBTyxDQUFDLGlHQUFtQjtBQUMxRSx1Q0FBdUMsdUNBQXVDO0FBQzlFLGdEQUFnRCwwREFBMEQsMkNBQTJDO0FBQ3JKLGlDQUFpQywwR0FBMEcsaUJBQWlCLGFBQWEsZ0NBQWdDO0FBQ3pNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXl3aW5kLy4vbm9kZV9tb2R1bGVzL2FtYXpvbi1jb2duaXRvLWlkZW50aXR5LWpzL2xpYi9Db2duaXRvQWNjZXNzVG9rZW4uanM/YTFjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xudmFyIF9Db2duaXRvSnd0VG9rZW4yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Db2duaXRvSnd0VG9rZW5cIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9IC8qIVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiogQGNsYXNzICovXG52YXIgQ29nbml0b0FjY2Vzc1Rva2VuID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29nbml0b0p3dFRva2VuKSB7XG4gIF9pbmhlcml0c0xvb3NlKENvZ25pdG9BY2Nlc3NUb2tlbiwgX0NvZ25pdG9Kd3RUb2tlbik7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RzIGEgbmV3IENvZ25pdG9BY2Nlc3NUb2tlbiBvYmplY3RcbiAgICogQHBhcmFtIHtzdHJpbmc9fSBBY2Nlc3NUb2tlbiBUaGUgSldUIGFjY2VzcyB0b2tlbi5cbiAgICovXG4gIGZ1bmN0aW9uIENvZ25pdG9BY2Nlc3NUb2tlbihfdGVtcCkge1xuICAgIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBBY2Nlc3NUb2tlbiA9IF9yZWYuQWNjZXNzVG9rZW47XG4gICAgcmV0dXJuIF9Db2duaXRvSnd0VG9rZW4uY2FsbCh0aGlzLCBBY2Nlc3NUb2tlbiB8fCAnJykgfHwgdGhpcztcbiAgfVxuICByZXR1cm4gQ29nbml0b0FjY2Vzc1Rva2VuO1xufShfQ29nbml0b0p3dFRva2VuMltcImRlZmF1bHRcIl0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBDb2duaXRvQWNjZXNzVG9rZW47Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoAccessToken.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoIdToken.js":
/*!***********************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoIdToken.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _CognitoJwtToken2 = _interopRequireDefault(__webpack_require__(/*! ./CognitoJwtToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoJwtToken.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); } /*!\n                                                                                                                                                                                                          * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n                                                                                                                                                                                                          * SPDX-License-Identifier: Apache-2.0\n                                                                                                                                                                                                          */\n/** @class */\nvar CognitoIdToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoIdToken, _CognitoJwtToken);\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  function CognitoIdToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      IdToken = _ref.IdToken;\n    return _CognitoJwtToken.call(this, IdToken || '') || this;\n  }\n  return CognitoIdToken;\n}(_CognitoJwtToken2[\"default\"]);\nexports[\"default\"] = CognitoIdToken;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9JZFRva2VuLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEIsK0NBQStDLG1CQUFPLENBQUMsaUdBQW1CO0FBQzFFLHVDQUF1Qyx1Q0FBdUM7QUFDOUUsZ0RBQWdELDBEQUEwRCwyQ0FBMkM7QUFDckosaUNBQWlDLDBHQUEwRyxpQkFBaUIsYUFBYSxnQ0FBZ0M7QUFDek07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9JZFRva2VuLmpzPzkwNjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbnZhciBfQ29nbml0b0p3dFRva2VuMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vQ29nbml0b0p3dFRva2VuXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfSAvKiFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIENvcHlyaWdodCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyoqIEBjbGFzcyAqL1xudmFyIENvZ25pdG9JZFRva2VuID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29nbml0b0p3dFRva2VuKSB7XG4gIF9pbmhlcml0c0xvb3NlKENvZ25pdG9JZFRva2VuLCBfQ29nbml0b0p3dFRva2VuKTtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBuZXcgQ29nbml0b0lkVG9rZW4gb2JqZWN0XG4gICAqIEBwYXJhbSB7c3RyaW5nPX0gSWRUb2tlbiBUaGUgSldUIElkIHRva2VuXG4gICAqL1xuICBmdW5jdGlvbiBDb2duaXRvSWRUb2tlbihfdGVtcCkge1xuICAgIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBJZFRva2VuID0gX3JlZi5JZFRva2VuO1xuICAgIHJldHVybiBfQ29nbml0b0p3dFRva2VuLmNhbGwodGhpcywgSWRUb2tlbiB8fCAnJykgfHwgdGhpcztcbiAgfVxuICByZXR1cm4gQ29nbml0b0lkVG9rZW47XG59KF9Db2duaXRvSnd0VG9rZW4yW1wiZGVmYXVsdFwiXSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IENvZ25pdG9JZFRva2VuOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoIdToken.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoJwtToken.js":
/*!************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoJwtToken.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _buffer = __webpack_require__(/*! buffer */ \"buffer\");\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n/** @class */\nvar CognitoJwtToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  var _proto = CognitoJwtToken.prototype;\n  _proto.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */;\n  _proto.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  }\n\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */;\n  _proto.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */;\n  _proto.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(_buffer.Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n  return CognitoJwtToken;\n}();\nexports[\"default\"] = CognitoJwtToken;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9Kd3RUb2tlbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLGNBQWMsbUJBQU8sQ0FBQyxzQkFBUTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGF5d2luZC8uL25vZGVfbW9kdWxlcy9hbWF6b24tY29nbml0by1pZGVudGl0eS1qcy9saWIvQ29nbml0b0p3dFRva2VuLmpzPzFiN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbnZhciBfYnVmZmVyID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbi8qIVxuICogQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG4vKiogQGNsYXNzICovXG52YXIgQ29nbml0b0p3dFRva2VuID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBuZXcgQ29nbml0b0p3dFRva2VuIG9iamVjdFxuICAgKiBAcGFyYW0ge3N0cmluZz19IHRva2VuIFRoZSBKV1QgdG9rZW4uXG4gICAqL1xuICBmdW5jdGlvbiBDb2duaXRvSnd0VG9rZW4odG9rZW4pIHtcbiAgICAvLyBBc3NpZ24gb2JqZWN0XG4gICAgdGhpcy5qd3RUb2tlbiA9IHRva2VuIHx8ICcnO1xuICAgIHRoaXMucGF5bG9hZCA9IHRoaXMuZGVjb2RlUGF5bG9hZCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IHRoZSByZWNvcmQncyB0b2tlbi5cbiAgICovXG4gIHZhciBfcHJvdG8gPSBDb2duaXRvSnd0VG9rZW4ucHJvdG90eXBlO1xuICBfcHJvdG8uZ2V0Snd0VG9rZW4gPSBmdW5jdGlvbiBnZXRKd3RUb2tlbigpIHtcbiAgICByZXR1cm4gdGhpcy5qd3RUb2tlbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7aW50fSB0aGUgdG9rZW4ncyBleHBpcmF0aW9uIChleHAgbWVtYmVyKS5cbiAgICovO1xuICBfcHJvdG8uZ2V0RXhwaXJhdGlvbiA9IGZ1bmN0aW9uIGdldEV4cGlyYXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucGF5bG9hZC5leHA7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge2ludH0gdGhlIHRva2VuJ3MgXCJpc3N1ZWQgYXRcIiAoaWF0IG1lbWJlcikuXG4gICAqLztcbiAgX3Byb3RvLmdldElzc3VlZEF0ID0gZnVuY3Rpb24gZ2V0SXNzdWVkQXQoKSB7XG4gICAgcmV0dXJuIHRoaXMucGF5bG9hZC5pYXQ7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge29iamVjdH0gdGhlIHRva2VuJ3MgcGF5bG9hZC5cbiAgICovO1xuICBfcHJvdG8uZGVjb2RlUGF5bG9hZCA9IGZ1bmN0aW9uIGRlY29kZVBheWxvYWQoKSB7XG4gICAgdmFyIHBheWxvYWQgPSB0aGlzLmp3dFRva2VuLnNwbGl0KCcuJylbMV07XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKF9idWZmZXIuQnVmZmVyLmZyb20ocGF5bG9hZCwgJ2Jhc2U2NCcpLnRvU3RyaW5nKCd1dGY4JykpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIENvZ25pdG9Kd3RUb2tlbjtcbn0oKTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gQ29nbml0b0p3dFRva2VuOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoJwtToken.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoRefreshToken.js":
/*!****************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoRefreshToken.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n/** @class */\nvar CognitoRefreshToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  function CognitoRefreshToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      RefreshToken = _ref.RefreshToken;\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  var _proto = CognitoRefreshToken.prototype;\n  _proto.getToken = function getToken() {\n    return this.token;\n  };\n  return CognitoRefreshToken;\n}();\nexports[\"default\"] = CognitoRefreshToken;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9SZWZyZXNoVG9rZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9SZWZyZXNoVG9rZW4uanM/YmEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuLyohXG4gKiBDb3B5cmlnaHQgQW1hem9uLmNvbSwgSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cbi8qKiBAY2xhc3MgKi9cbnZhciBDb2duaXRvUmVmcmVzaFRva2VuID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBuZXcgQ29nbml0b1JlZnJlc2hUb2tlbiBvYmplY3RcbiAgICogQHBhcmFtIHtzdHJpbmc9fSBSZWZyZXNoVG9rZW4gVGhlIEpXVCByZWZyZXNoIHRva2VuLlxuICAgKi9cbiAgZnVuY3Rpb24gQ29nbml0b1JlZnJlc2hUb2tlbihfdGVtcCkge1xuICAgIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBSZWZyZXNoVG9rZW4gPSBfcmVmLlJlZnJlc2hUb2tlbjtcbiAgICAvLyBBc3NpZ24gb2JqZWN0XG4gICAgdGhpcy50b2tlbiA9IFJlZnJlc2hUb2tlbiB8fCAnJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgcmVjb3JkJ3MgdG9rZW4uXG4gICAqL1xuICB2YXIgX3Byb3RvID0gQ29nbml0b1JlZnJlc2hUb2tlbi5wcm90b3R5cGU7XG4gIF9wcm90by5nZXRUb2tlbiA9IGZ1bmN0aW9uIGdldFRva2VuKCkge1xuICAgIHJldHVybiB0aGlzLnRva2VuO1xuICB9O1xuICByZXR1cm4gQ29nbml0b1JlZnJlc2hUb2tlbjtcbn0oKTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gQ29nbml0b1JlZnJlc2hUb2tlbjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoRefreshToken.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUser.js":
/*!********************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoUser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _buffer = __webpack_require__(/*! buffer */ \"buffer\");\nvar _sha256Js = __webpack_require__(/*! @aws-crypto/sha256-js */ \"(ssr)/./node_modules/@aws-crypto/sha256-js/build/index.js\");\nvar _Platform = __webpack_require__(/*! ./Platform */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/index.js\");\nvar _BigInteger = _interopRequireDefault(__webpack_require__(/*! ./BigInteger */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/BigInteger.js\"));\nvar _AuthenticationHelper = _interopRequireDefault(__webpack_require__(/*! ./AuthenticationHelper */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/AuthenticationHelper.js\"));\nvar _CognitoAccessToken = _interopRequireDefault(__webpack_require__(/*! ./CognitoAccessToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoAccessToken.js\"));\nvar _CognitoIdToken = _interopRequireDefault(__webpack_require__(/*! ./CognitoIdToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoIdToken.js\"));\nvar _CognitoRefreshToken = _interopRequireDefault(__webpack_require__(/*! ./CognitoRefreshToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoRefreshToken.js\"));\nvar _CognitoUserSession = _interopRequireDefault(__webpack_require__(/*! ./CognitoUserSession */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserSession.js\"));\nvar _DateHelper = _interopRequireDefault(__webpack_require__(/*! ./DateHelper */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/DateHelper.js\"));\nvar _CognitoUserAttribute = _interopRequireDefault(__webpack_require__(/*! ./CognitoUserAttribute */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserAttribute.js\"));\nvar _StorageHelper = _interopRequireDefault(__webpack_require__(/*! ./StorageHelper */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/StorageHelper.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\nvar isNavigatorAvailable = typeof navigator !== 'undefined';\nvar userAgent = isNavigatorAvailable ? _Platform.Platform.isReactNative ? 'react-native' : navigator.userAgent : 'nodejs';\n\n/** @class */\nvar CognitoUser = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user's username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   * @param {object} data.Storage Optional storage object.\n   */\n  function CognitoUser(data) {\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error('Username and Pool information are required.');\n    }\n    this.username = data.Username || '';\n    this.pool = data.Pool;\n    this.Session = null;\n    this.client = data.Pool.client;\n    this.signInUserSession = null;\n    this.authenticationFlowType = 'USER_SRP_AUTH';\n    this.storage = data.Storage || new _StorageHelper[\"default\"]().getStorage();\n    this.keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    this.userDataKey = this.keyPrefix + \".\" + this.username + \".userData\";\n  }\n\n  /**\n   * Sets the session for this user\n   * @param {CognitoUserSession} signInUserSession the session\n   * @returns {void}\n   */\n  var _proto = CognitoUser.prototype;\n  _proto.setSignInUserSession = function setSignInUserSession(signInUserSession) {\n    this.clearCachedUserData();\n    this.signInUserSession = signInUserSession;\n    this.cacheTokens();\n  }\n\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */;\n  _proto.getSignInUserSession = function getSignInUserSession() {\n    return this.signInUserSession;\n  }\n\n  /**\n   * @returns {string} the user's username\n   */;\n  _proto.getUsername = function getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {String} the authentication flow type\n   */;\n  _proto.getAuthenticationFlowType = function getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  }\n\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */;\n  _proto.setAuthenticationFlowType = function setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  }\n\n  /**\n   * This is used for authenticating the user through the custom authentication flow.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */;\n  _proto.initiateAuth = function initiateAuth(authDetails, callback) {\n    var _this = this;\n    var authParameters = authDetails.getAuthParameters();\n    authParameters.USERNAME = this.username;\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'CUSTOM_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('InitiateAuth', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      var challengeName = data.ChallengeName;\n      var challengeParameters = data.ChallengeParameters;\n      if (challengeName === 'CUSTOM_CHALLENGE') {\n        _this.Session = data.Session;\n        return callback.customChallenge(challengeParameters);\n      }\n      _this.signInUserSession = _this.getCognitoUserSession(data.AuthenticationResult);\n      _this.cacheTokens();\n      return callback.onSuccess(_this.signInUserSession);\n    });\n  }\n\n  /**\n   * This is used for authenticating the user.\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */;\n  _proto.authenticateUser = function authenticateUser(authDetails, callback) {\n    if (this.authenticationFlowType === 'USER_PASSWORD_AUTH') {\n      return this.authenticateUserPlainUsernamePassword(authDetails, callback);\n    } else if (this.authenticationFlowType === 'USER_SRP_AUTH' || this.authenticationFlowType === 'CUSTOM_AUTH') {\n      return this.authenticateUserDefaultAuth(authDetails, callback);\n    }\n    return callback.onFailure(new Error('Authentication flow type is invalid.'));\n  }\n\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * It calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */;\n  _proto.authenticateUserDefaultAuth = function authenticateUserDefaultAuth(authDetails, callback) {\n    var _this2 = this;\n    var authenticationHelper = new _AuthenticationHelper[\"default\"](this.pool.getUserPoolName());\n    var dateHelper = new _DateHelper[\"default\"]();\n    var serverBValue;\n    var salt;\n    var authParameters = {};\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n    authParameters.USERNAME = this.username;\n    authenticationHelper.getLargeAValue(function (errOnAValue, aValue) {\n      // getLargeAValue callback start\n      if (errOnAValue) {\n        callback.onFailure(errOnAValue);\n      }\n      authParameters.SRP_A = aValue.toString(16);\n      if (_this2.authenticationFlowType === 'CUSTOM_AUTH') {\n        authParameters.CHALLENGE_NAME = 'SRP_A';\n      }\n      var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n      var jsonReq = {\n        AuthFlow: _this2.authenticationFlowType,\n        ClientId: _this2.pool.getClientId(),\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetaData\n      };\n      if (_this2.getUserContextData(_this2.username)) {\n        jsonReq.UserContextData = _this2.getUserContextData(_this2.username);\n      }\n      _this2.client.request('InitiateAuth', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        var challengeParameters = data.ChallengeParameters;\n        _this2.username = challengeParameters.USER_ID_FOR_SRP;\n        _this2.userDataKey = _this2.keyPrefix + \".\" + _this2.username + \".userData\";\n        serverBValue = new _BigInteger[\"default\"](challengeParameters.SRP_B, 16);\n        salt = new _BigInteger[\"default\"](challengeParameters.SALT, 16);\n        _this2.getCachedDeviceKeyAndPassword();\n        authenticationHelper.getPasswordAuthenticationKey(_this2.username, authDetails.getPassword(), serverBValue, salt, function (errOnHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errOnHkdf) {\n            callback.onFailure(errOnHkdf);\n          }\n          var dateNow = dateHelper.getNowString();\n          var concatBuffer = _buffer.Buffer.concat([_buffer.Buffer.from(_this2.pool.getUserPoolName(), 'utf8'), _buffer.Buffer.from(_this2.username, 'utf8'), _buffer.Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), _buffer.Buffer.from(dateNow, 'utf8')]);\n          var awsCryptoHash = new _sha256Js.Sha256(hkdf);\n          awsCryptoHash.update(concatBuffer);\n          var resultFromAWSCrypto = awsCryptoHash.digestSync();\n          var signatureString = _buffer.Buffer.from(resultFromAWSCrypto).toString('base64');\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this2.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n          if (_this2.deviceKey != null) {\n            challengeResponses.DEVICE_KEY = _this2.deviceKey;\n          }\n          var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\n            return _this2.client.request('RespondToAuthChallenge', challenge, function (errChallenge, dataChallenge) {\n              if (errChallenge && errChallenge.code === 'ResourceNotFoundException' && errChallenge.message.toLowerCase().indexOf('device') !== -1) {\n                challengeResponses.DEVICE_KEY = null;\n                _this2.deviceKey = null;\n                _this2.randomPassword = null;\n                _this2.deviceGroupKey = null;\n                _this2.clearCachedDeviceKeyAndPassword();\n                return respondToAuthChallenge(challenge, challengeCallback);\n              }\n              return challengeCallback(errChallenge, dataChallenge);\n            });\n          };\n          var jsonReqResp = {\n            ChallengeName: 'PASSWORD_VERIFIER',\n            ClientId: _this2.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session,\n            ClientMetadata: clientMetaData\n          };\n          if (_this2.getUserContextData()) {\n            jsonReqResp.UserContextData = _this2.getUserContextData();\n          }\n          respondToAuthChallenge(jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n            return _this2.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n          });\n          return undefined;\n          // getPasswordAuthenticationKey callback end\n        });\n\n        return undefined;\n      });\n      // getLargeAValue callback end\n    });\n  }\n\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */;\n  _proto.authenticateUserPlainUsernamePassword = function authenticateUserPlainUsernamePassword(authDetails, callback) {\n    var _this3 = this;\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.PASSWORD = authDetails.getPassword();\n    if (!authParameters.PASSWORD) {\n      callback.onFailure(new Error('PASSWORD parameter is required'));\n      return;\n    }\n    var authenticationHelper = new _AuthenticationHelper[\"default\"](this.pool.getUserPoolName());\n    this.getCachedDeviceKeyAndPassword();\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n    if (this.getUserContextData(this.username)) {\n      jsonReq.UserContextData = this.getUserContextData(this.username);\n    }\n    // USER_PASSWORD_AUTH happens in a single round-trip: client sends userName and password,\n    // Cognito UserPools verifies password and returns tokens.\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return _this3.authenticateUserInternal(authResult, authenticationHelper, callback);\n    });\n  }\n\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {object} dataAuthenticate authentication data\n   * @param {object} authenticationHelper helper created\n   * @param {callback} callback passed on from caller\n   * @returns {void}\n   */;\n  _proto.authenticateUserInternal = function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    var _this4 = this;\n    var challengeName = dataAuthenticate.ChallengeName;\n    var challengeParameters = dataAuthenticate.ChallengeParameters;\n    if (challengeName === 'SMS_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName, challengeParameters);\n    }\n    if (challengeName === 'SELECT_MFA_TYPE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.selectMFAType(challengeName, challengeParameters);\n    }\n    if (challengeName === 'MFA_SETUP') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaSetup(challengeName, challengeParameters);\n    }\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.totpRequired(challengeName, challengeParameters);\n    }\n    if (challengeName === 'CUSTOM_CHALLENGE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(challengeParameters);\n    }\n    if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n      this.Session = dataAuthenticate.Session;\n      var userAttributes = null;\n      var rawRequiredAttributes = null;\n      var requiredAttributes = [];\n      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n      if (challengeParameters) {\n        userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n        rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n      }\n      if (rawRequiredAttributes) {\n        for (var i = 0; i < rawRequiredAttributes.length; i++) {\n          requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n        }\n      }\n      return callback.newPasswordRequired(userAttributes, requiredAttributes);\n    }\n    if (challengeName === 'DEVICE_SRP_AUTH') {\n      this.Session = dataAuthenticate.Session;\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.challengeName = challengeName;\n    this.cacheTokens();\n    var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n    authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n      if (errGenHash) {\n        return callback.onFailure(errGenHash);\n      }\n      var deviceSecretVerifierConfig = {\n        Salt: _buffer.Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n        PasswordVerifier: _buffer.Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n      };\n      _this4.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n      _this4.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n      _this4.randomPassword = authenticationHelper.getRandomPassword();\n      _this4.client.request('ConfirmDevice', {\n        DeviceKey: newDeviceMetadata.DeviceKey,\n        AccessToken: _this4.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: userAgent\n      }, function (errConfirm, dataConfirm) {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n        _this4.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n        _this4.cacheDeviceKeyAndPassword();\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(_this4.signInUserSession, dataConfirm.UserConfirmationNecessary);\n        }\n        return callback.onSuccess(_this4.signInUserSession);\n      });\n      return undefined;\n    });\n    return undefined;\n  }\n\n  /**\n   * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n   * Pass the new password with any new user attributes to be updated.\n   * User attribute keys must be of format userAttributes.<attribute_name>.\n   * @param {string} newPassword new password for this user\n   * @param {object} requiredAttributeData map with values for all required attributes\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *         response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.completeNewPasswordChallenge = function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback, clientMetadata) {\n    var _this5 = this;\n    if (!newPassword) {\n      return callback.onFailure(new Error('New password is required.'));\n    }\n    var authenticationHelper = new _AuthenticationHelper[\"default\"](this.pool.getUserPoolName());\n    var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n    var finalUserAttributes = {};\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach(function (key) {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    var jsonReq = {\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('RespondToAuthChallenge', jsonReq, function (errAuthenticate, dataAuthenticate) {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n      return _this5.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   * @private\n   */;\n  _proto.getDeviceResponse = function getDeviceResponse(callback, clientMetadata) {\n    var _this6 = this;\n    var authenticationHelper = new _AuthenticationHelper[\"default\"](this.deviceGroupKey);\n    var dateHelper = new _DateHelper[\"default\"]();\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authenticationHelper.getLargeAValue(function (errAValue, aValue) {\n      // getLargeAValue callback start\n      if (errAValue) {\n        callback.onFailure(errAValue);\n      }\n      authParameters.SRP_A = aValue.toString(16);\n      var jsonReq = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: _this6.pool.getClientId(),\n        ChallengeResponses: authParameters,\n        ClientMetadata: clientMetadata,\n        Session: _this6.Session\n      };\n      if (_this6.getUserContextData()) {\n        jsonReq.UserContextData = _this6.getUserContextData();\n      }\n      _this6.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        var challengeParameters = data.ChallengeParameters;\n        var serverBValue = new _BigInteger[\"default\"](challengeParameters.SRP_B, 16);\n        var salt = new _BigInteger[\"default\"](challengeParameters.SALT, 16);\n        authenticationHelper.getPasswordAuthenticationKey(_this6.deviceKey, _this6.randomPassword, serverBValue, salt, function (errHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errHkdf) {\n            return callback.onFailure(errHkdf);\n          }\n          var dateNow = dateHelper.getNowString();\n          var concatBuffer = _buffer.Buffer.concat([_buffer.Buffer.from(_this6.deviceGroupKey, 'utf8'), _buffer.Buffer.from(_this6.deviceKey, 'utf8'), _buffer.Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), _buffer.Buffer.from(dateNow, 'utf8')]);\n          var awsCryptoHash = new _sha256Js.Sha256(hkdf);\n          awsCryptoHash.update(concatBuffer);\n          var resultFromAWSCrypto = awsCryptoHash.digestSync();\n          var signatureString = _buffer.Buffer.from(resultFromAWSCrypto).toString('base64');\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this6.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n          challengeResponses.DEVICE_KEY = _this6.deviceKey;\n          var jsonReqResp = {\n            ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n            ClientId: _this6.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session\n          };\n          if (_this6.getUserContextData()) {\n            jsonReqResp.UserContextData = _this6.getUserContextData();\n          }\n          _this6.client.request('RespondToAuthChallenge', jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n            _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n            _this6.cacheTokens();\n            return callback.onSuccess(_this6.signInUserSession);\n          });\n          return undefined;\n          // getPasswordAuthenticationKey callback end\n        });\n\n        return undefined;\n      });\n      // getLargeAValue callback end\n    });\n  }\n\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.confirmRegistration = function confirmRegistration(confirmationCode, forceAliasCreation, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('ConfirmSignUp', jsonReq, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n  }\n\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challenge answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.sendCustomChallengeAnswer = function sendCustomChallengeAnswer(answerChallenge, callback, clientMetadata) {\n    var _this7 = this;\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var authenticationHelper = new _AuthenticationHelper[\"default\"](this.pool.getUserPoolName());\n    this.getCachedDeviceKeyAndPassword();\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n    var jsonReq = {\n      ChallengeName: 'CUSTOM_CHALLENGE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return _this7.authenticateUserInternal(data, authenticationHelper, callback);\n    });\n  }\n\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {string} mfaType The mfa we are replying to.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.sendMFACode = function sendMFACode(confirmationCode, callback, mfaType, clientMetadata) {\n    var _this8 = this;\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n    var mfaTypeSelection = mfaType || 'SMS_MFA';\n    if (mfaTypeSelection === 'SOFTWARE_TOKEN_MFA') {\n      challengeResponses.SOFTWARE_TOKEN_MFA_CODE = confirmationCode;\n    }\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n    var jsonReq = {\n      ChallengeName: mfaTypeSelection,\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, dataAuthenticate) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      var challengeName = dataAuthenticate.ChallengeName;\n      if (challengeName === 'DEVICE_SRP_AUTH') {\n        _this8.getDeviceResponse(callback);\n        return undefined;\n      }\n      _this8.signInUserSession = _this8.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n      _this8.cacheTokens();\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(_this8.signInUserSession);\n      }\n      var authenticationHelper = new _AuthenticationHelper[\"default\"](_this8.pool.getUserPoolName());\n      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n        if (errGenHash) {\n          return callback.onFailure(errGenHash);\n        }\n        var deviceSecretVerifierConfig = {\n          Salt: _buffer.Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n          PasswordVerifier: _buffer.Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n        };\n        _this8.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n        _this8.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n        _this8.randomPassword = authenticationHelper.getRandomPassword();\n        _this8.client.request('ConfirmDevice', {\n          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n          AccessToken: _this8.signInUserSession.getAccessToken().getJwtToken(),\n          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n          DeviceName: userAgent\n        }, function (errConfirm, dataConfirm) {\n          if (errConfirm) {\n            return callback.onFailure(errConfirm);\n          }\n          _this8.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n          _this8.cacheDeviceKeyAndPassword();\n          if (dataConfirm.UserConfirmationNecessary === true) {\n            return callback.onSuccess(_this8.signInUserSession, dataConfirm.UserConfirmationNecessary);\n          }\n          return callback.onSuccess(_this8.signInUserSession);\n        });\n        return undefined;\n      });\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.changePassword = function changePassword(oldUserPassword, newUserPassword, callback, clientMetadata) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    this.client.request('ChangePassword', {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.enableMFA = function enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    var mfaOptions = [];\n    var mfaEnabled = {\n      DeliveryMedium: 'SMS',\n      AttributeName: 'phone_number'\n    };\n    mfaOptions.push(mfaEnabled);\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @param {IMfaSettings} smsMfaSettings the sms mfa settings\n   * @param {IMFASettings} softwareTokenMfaSettings the software token mfa settings\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.setUserMfaPreference = function setUserMfaPreference(smsMfaSettings, softwareTokenMfaSettings, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    this.client.request('SetUserMFAPreference', {\n      SMSMfaSettings: smsMfaSettings,\n      SoftwareTokenMfaSettings: softwareTokenMfaSettings,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to disable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.disableMFA = function disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    var mfaOptions = [];\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to delete itself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.deleteUser = function deleteUser(callback, clientMetadata) {\n    var _this9 = this;\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    this.client.request('DeleteUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      _this9.clearCachedUser();\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.updateAttributes = function updateAttributes(attributes, callback, clientMetadata) {\n    var _this10 = this;\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    this.client.request('UpdateUserAttributes', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes,\n      ClientMetadata: clientMetadata\n    }, function (err, result) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      // update cached user\n      return _this10.getUserData(function () {\n        return callback(null, 'SUCCESS', result);\n      }, {\n        bypassCache: true\n      });\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.getUserAttributes = function getUserAttributes(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n      var attributeList = [];\n      for (var i = 0; i < userData.UserAttributes.length; i++) {\n        var attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value\n        };\n        var userAttribute = new _CognitoUserAttribute[\"default\"](attribute);\n        attributeList.push(userAttribute);\n      }\n      return callback(null, attributeList);\n    });\n    return undefined;\n  }\n\n  /**\n   * This was previously used by an authenticated user to get MFAOptions,\n   * but no longer returns a meaningful response. Refer to the documentation for\n   * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n   * @deprecated\n   * @param {nodeCallback<MFAOptions>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.getMFAOptions = function getMFAOptions(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, userData.MFAOptions);\n    });\n    return undefined;\n  }\n\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */;\n  _proto.createGetUserRequest = function createGetUserRequest() {\n    return this.client.promisifyRequest('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    });\n  }\n\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */;\n  _proto.refreshSessionIfPossible = function refreshSessionIfPossible(options) {\n    var _this11 = this;\n    if (options === void 0) {\n      options = {};\n    }\n    // best effort, if not possible\n    return new Promise(function (resolve) {\n      var refresh = _this11.signInUserSession.getRefreshToken();\n      if (refresh && refresh.getToken()) {\n        _this11.refreshSession(refresh, resolve, options.clientMetadata);\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * @typedef {Object} GetUserDataOptions\n   * @property {boolean} bypassCache - force getting data from Cognito service\n   * @property {Record<string, string>} clientMetadata - clientMetadata for getSession\n   */\n\n  /**\n   * This is used by an authenticated users to get the userData\n   * @param {nodeCallback<UserData>} callback Called on success or error.\n   * @param {GetUserDataOptions} params\n   * @returns {void}\n   */;\n  _proto.getUserData = function getUserData(callback, params) {\n    var _this12 = this;\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.clearCachedUserData();\n      return callback(new Error('User is not authenticated'), null);\n    }\n    var userData = this.getUserDataFromCache();\n    if (!userData) {\n      this.fetchUserData().then(function (data) {\n        callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n    if (this.isFetchUserDataAndTokenRequired(params)) {\n      this.fetchUserData().then(function (data) {\n        return _this12.refreshSessionIfPossible(params).then(function () {\n          return data;\n        });\n      }).then(function (data) {\n        return callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n    try {\n      callback(null, JSON.parse(userData));\n      return;\n    } catch (err) {\n      this.clearCachedUserData();\n      callback(err, null);\n      return;\n    }\n  }\n\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */;\n  _proto.getUserDataFromCache = function getUserDataFromCache() {\n    var userData = this.storage.getItem(this.userDataKey);\n    return userData;\n  }\n\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */;\n  _proto.isFetchUserDataAndTokenRequired = function isFetchUserDataAndTokenRequired(params) {\n    var _ref = params || {},\n      _ref$bypassCache = _ref.bypassCache,\n      bypassCache = _ref$bypassCache === void 0 ? false : _ref$bypassCache;\n    return bypassCache;\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */;\n  _proto.fetchUserData = function fetchUserData() {\n    var _this13 = this;\n    return this.createGetUserRequest().then(function (data) {\n      _this13.cacheUserData(data);\n      return data;\n    });\n  }\n\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.deleteAttributes = function deleteAttributes(attributeList, callback) {\n    var _this14 = this;\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n    this.client.request('DeleteUserAttributes', {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      // update cached user\n      return _this14.getUserData(function () {\n        return callback(null, 'SUCCESS');\n      }, {\n        bypassCache: true\n      });\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.resendConfirmationCode = function resendConfirmationCode(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n    this.client.request('ResendConfirmationCode', jsonReq, function (err, result) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, result);\n    });\n  }\n\n  /**\n   * @typedef {Object} GetSessionOptions\n   * @property {Record<string, string>} clientMetadata - clientMetadata for getSession\n   */\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @param {GetSessionOptions} options\n   * @returns {void}\n   */;\n  _proto.getSession = function getSession(callback, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (this.username == null) {\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n    }\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var idTokenKey = keyPrefix + \".idToken\";\n    var accessTokenKey = keyPrefix + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".clockDrift\";\n    if (this.storage.getItem(idTokenKey)) {\n      var idToken = new _CognitoIdToken[\"default\"]({\n        IdToken: this.storage.getItem(idTokenKey)\n      });\n      var accessToken = new _CognitoAccessToken[\"default\"]({\n        AccessToken: this.storage.getItem(accessTokenKey)\n      });\n      var refreshToken = new _CognitoRefreshToken[\"default\"]({\n        RefreshToken: this.storage.getItem(refreshTokenKey)\n      });\n      var clockDrift = parseInt(this.storage.getItem(clockDriftKey), 0) || 0;\n      var sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n        ClockDrift: clockDrift\n      };\n      var cachedSession = new _CognitoUserSession[\"default\"](sessionData);\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n      if (!refreshToken.getToken()) {\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n      }\n      this.refreshSession(refreshToken, callback, options.clientMetadata);\n    } else {\n      callback(new Error('Local storage is missing an ID Token, Please authenticate'), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.refreshSession = function refreshSession(refreshToken, callback, clientMetadata) {\n    var _this15 = this;\n    var wrappedCallback = this.pool.wrapRefreshSessionCallback ? this.pool.wrapRefreshSessionCallback(callback) : callback;\n    var authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    if (this.storage.getItem(lastUserKey)) {\n      this.username = this.storage.getItem(lastUserKey);\n      var deviceKeyKey = keyPrefix + \".\" + this.username + \".deviceKey\";\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        if (err.code === 'NotAuthorizedException') {\n          _this15.clearCachedUser();\n        }\n        return wrappedCallback(err, null);\n      }\n      if (authResult) {\n        var authenticationResult = authResult.AuthenticationResult;\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n        _this15.signInUserSession = _this15.getCognitoUserSession(authenticationResult);\n        _this15.cacheTokens();\n        return wrappedCallback(null, _this15.signInUserSession);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */;\n  _proto.cacheTokens = function cacheTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    this.storage.setItem(clockDriftKey, \"\" + this.signInUserSession.getClockDrift());\n    this.storage.setItem(lastUserKey, this.username);\n  }\n\n  /**\n   * This is to cache user data\n   */;\n  _proto.cacheUserData = function cacheUserData(userData) {\n    this.storage.setItem(this.userDataKey, JSON.stringify(userData));\n  }\n\n  /**\n   * This is to remove cached user data\n   */;\n  _proto.clearCachedUserData = function clearCachedUserData() {\n    this.storage.removeItem(this.userDataKey);\n  };\n  _proto.clearCachedUser = function clearCachedUser() {\n    this.clearCachedTokens();\n    this.clearCachedUserData();\n  }\n\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */;\n  _proto.cacheDeviceKeyAndPassword = function cacheDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.setItem(deviceKeyKey, this.deviceKey);\n    this.storage.setItem(randomPasswordKey, this.randomPassword);\n    this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  }\n\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */;\n  _proto.getCachedDeviceKeyAndPassword = function getCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    if (this.storage.getItem(deviceKeyKey)) {\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      this.randomPassword = this.storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\n    }\n  }\n\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */;\n  _proto.clearCachedDeviceKeyAndPassword = function clearCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.removeItem(deviceKeyKey);\n    this.storage.removeItem(randomPasswordKey);\n    this.storage.removeItem(deviceGroupKeyKey);\n  }\n\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */;\n  _proto.clearCachedTokens = function clearCachedTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    this.storage.removeItem(idTokenKey);\n    this.storage.removeItem(accessTokenKey);\n    this.storage.removeItem(refreshTokenKey);\n    this.storage.removeItem(lastUserKey);\n    this.storage.removeItem(clockDriftKey);\n  }\n\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */;\n  _proto.getCognitoUserSession = function getCognitoUserSession(authResult) {\n    var idToken = new _CognitoIdToken[\"default\"](authResult);\n    var accessToken = new _CognitoAccessToken[\"default\"](authResult);\n    var refreshToken = new _CognitoRefreshToken[\"default\"](authResult);\n    var sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken\n    };\n    return new _CognitoUserSession[\"default\"](sessionData);\n  }\n\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.forgotPassword = function forgotPassword(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('ForgotPassword', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n      return callback.onSuccess(data);\n    });\n  }\n\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.confirmPassword = function confirmPassword(confirmationCode, newPassword, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('ConfirmForgotPassword', jsonReq, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n  }\n\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.getAttributeVerificationCode = function getAttributeVerificationCode(attributeName, callback, clientMetadata) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    this.client.request('GetUserAttributeVerificationCode', {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */;\n  _proto.verifyAttribute = function verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    this.client.request('VerifyUserAttribute', {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */;\n  _proto.getDevice = function getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    this.client.request('GetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to forget a specific device\n   * @param {string} deviceKey Device key.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */;\n  _proto.forgetSpecificDevice = function forgetSpecificDevice(deviceKey, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    this.client.request('ForgetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: deviceKey\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */;\n  _proto.forgetDevice = function forgetDevice(callback) {\n    var _this16 = this;\n    this.forgetSpecificDevice(this.deviceKey, {\n      onFailure: callback.onFailure,\n      onSuccess: function onSuccess(result) {\n        _this16.deviceKey = null;\n        _this16.deviceGroupKey = null;\n        _this16.randomPassword = null;\n        _this16.clearCachedDeviceKeyAndPassword();\n        return callback.onSuccess(result);\n      }\n    });\n  }\n\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */;\n  _proto.setDeviceStatusRemembered = function setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */;\n  _proto.setDeviceStatusNotRemembered = function setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'not_remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string | null} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */;\n  _proto.listDevices = function listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    var requestParams = {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit\n    };\n    if (paginationToken) {\n      requestParams.PaginationToken = paginationToken;\n    }\n    this.client.request('ListDevices', requestParams, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */;\n  _proto.globalSignOut = function globalSignOut(callback) {\n    var _this17 = this;\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n    this.client.request('GlobalSignOut', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      _this17.clearCachedUser();\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */;\n  _proto.signOut = function signOut(revokeTokenCallback) {\n    var _this18 = this;\n    // If tokens won't be revoked, we just clean the client data.\n    if (!revokeTokenCallback || typeof revokeTokenCallback !== 'function') {\n      this.cleanClientData();\n      return;\n    }\n    this.getSession(function (error, _session) {\n      if (error) {\n        return revokeTokenCallback(error);\n      }\n      _this18.revokeTokens(function (err) {\n        _this18.cleanClientData();\n        revokeTokenCallback(err);\n      });\n    });\n  };\n  _proto.revokeTokens = function revokeTokens(revokeTokenCallback) {\n    if (revokeTokenCallback === void 0) {\n      revokeTokenCallback = function revokeTokenCallback() {};\n    }\n    if (typeof revokeTokenCallback !== 'function') {\n      throw new Error('Invalid revokeTokenCallback. It should be a function.');\n    }\n    var tokensToBeRevoked = [];\n    if (!this.signInUserSession) {\n      var error = new Error('User is not authenticated');\n      return revokeTokenCallback(error);\n    }\n    if (!this.signInUserSession.getAccessToken()) {\n      var _error = new Error('No Access token available');\n      return revokeTokenCallback(_error);\n    }\n    var refreshToken = this.signInUserSession.getRefreshToken().getToken();\n    var accessToken = this.signInUserSession.getAccessToken();\n    if (this.isSessionRevocable(accessToken)) {\n      if (refreshToken) {\n        return this.revokeToken({\n          token: refreshToken,\n          callback: revokeTokenCallback\n        });\n      }\n    }\n    revokeTokenCallback();\n  };\n  _proto.isSessionRevocable = function isSessionRevocable(token) {\n    if (token && typeof token.decodePayload === 'function') {\n      try {\n        var _token$decodePayload = token.decodePayload(),\n          origin_jti = _token$decodePayload.origin_jti;\n        return !!origin_jti;\n      } catch (err) {\n        // Nothing to do, token doesnt have origin_jti claim\n      }\n    }\n    return false;\n  };\n  _proto.cleanClientData = function cleanClientData() {\n    this.signInUserSession = null;\n    this.clearCachedUser();\n  };\n  _proto.revokeToken = function revokeToken(_ref2) {\n    var token = _ref2.token,\n      callback = _ref2.callback;\n    this.client.requestWithRetry('RevokeToken', {\n      Token: token,\n      ClientId: this.pool.getClientId()\n    }, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      callback();\n    });\n  }\n\n  /**\n   * This is used by a user trying to select a given MFA\n   * @param {string} answerChallenge the mfa the user wants\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.sendMFASelectionAnswer = function sendMFASelectionAnswer(answerChallenge, callback) {\n    var _this19 = this;\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var jsonReq = {\n      ChallengeName: 'SELECT_MFA_TYPE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      _this19.Session = data.Session;\n      if (answerChallenge === 'SMS_MFA') {\n        return callback.mfaRequired(data.ChallengeName, data.ChallengeParameters);\n      }\n      if (answerChallenge === 'SOFTWARE_TOKEN_MFA') {\n        return callback.totpRequired(data.ChallengeName, data.ChallengeParameters);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * This returns the user context data for advanced security feature.\n   * @returns {string} the user context data from CognitoUserPool\n   */;\n  _proto.getUserContextData = function getUserContextData() {\n    var pool = this.pool;\n    return pool.getUserContextData(this.username);\n  }\n\n  /**\n   * This is used by an authenticated or a user trying to authenticate to associate a TOTP MFA\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.associateSoftwareToken = function associateSoftwareToken(callback) {\n    var _this20 = this;\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('AssociateSoftwareToken', {\n        Session: this.Session\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        _this20.Session = data.Session;\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    } else {\n      this.client.request('AssociateSoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    }\n  }\n\n  /**\n   * This is used by an authenticated or a user trying to authenticate to verify a TOTP MFA\n   * @param {string} totpCode The MFA code entered by the user.\n   * @param {string} friendlyDeviceName The device name we are assigning to the device.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */;\n  _proto.verifySoftwareToken = function verifySoftwareToken(totpCode, friendlyDeviceName, callback) {\n    var _this21 = this;\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('VerifySoftwareToken', {\n        Session: this.Session,\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        _this21.Session = data.Session;\n        var challengeResponses = {};\n        challengeResponses.USERNAME = _this21.username;\n        var jsonReq = {\n          ChallengeName: 'MFA_SETUP',\n          ClientId: _this21.pool.getClientId(),\n          ChallengeResponses: challengeResponses,\n          Session: _this21.Session\n        };\n        if (_this21.getUserContextData()) {\n          jsonReq.UserContextData = _this21.getUserContextData();\n        }\n        _this21.client.request('RespondToAuthChallenge', jsonReq, function (errRespond, dataRespond) {\n          if (errRespond) {\n            return callback.onFailure(errRespond);\n          }\n          _this21.signInUserSession = _this21.getCognitoUserSession(dataRespond.AuthenticationResult);\n          _this21.cacheTokens();\n          return callback.onSuccess(_this21.signInUserSession);\n        });\n        return undefined;\n      });\n    } else {\n      this.client.request('VerifySoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        return callback.onSuccess(data);\n      });\n    }\n  };\n  return CognitoUser;\n}();\nexports[\"default\"] = CognitoUser;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserAttribute.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoUserAttribute.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n/** @class */\nvar CognitoUserAttribute = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record's name\n   * @param {string=} Value The record's value\n   */\n  function CognitoUserAttribute(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      Name = _ref.Name,\n      Value = _ref.Value;\n    this.Name = Name || '';\n    this.Value = Value || '';\n  }\n\n  /**\n   * @returns {string} the record's value.\n   */\n  var _proto = CognitoUserAttribute.prototype;\n  _proto.getValue = function getValue() {\n    return this.Value;\n  }\n\n  /**\n   * Sets the record's value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */;\n  _proto.setValue = function setValue(value) {\n    this.Value = value;\n    return this;\n  }\n\n  /**\n   * @returns {string} the record's name.\n   */;\n  _proto.getName = function getName() {\n    return this.Name;\n  }\n\n  /**\n   * Sets the record's name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */;\n  _proto.setName = function setName(name) {\n    this.Name = name;\n    return this;\n  }\n\n  /**\n   * @returns {string} a string representation of the record.\n   */;\n  _proto.toString = function toString() {\n    return JSON.stringify(this);\n  }\n\n  /**\n   * @returns {object} a flat object representing the record.\n   */;\n  _proto.toJSON = function toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value\n    };\n  };\n  return CognitoUserAttribute;\n}();\nexports[\"default\"] = CognitoUserAttribute;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9Vc2VyQXR0cmlidXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlLHNCQUFzQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZSxzQkFBc0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9Vc2VyQXR0cmlidXRlLmpzPzMzZmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbi8qIVxuICogQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG4vKiogQGNsYXNzICovXG52YXIgQ29nbml0b1VzZXJBdHRyaWJ1dGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQ29uc3RydWN0cyBhIG5ldyBDb2duaXRvVXNlckF0dHJpYnV0ZSBvYmplY3RcbiAgICogQHBhcmFtIHtzdHJpbmc9fSBOYW1lIFRoZSByZWNvcmQncyBuYW1lXG4gICAqIEBwYXJhbSB7c3RyaW5nPX0gVmFsdWUgVGhlIHJlY29yZCdzIHZhbHVlXG4gICAqL1xuICBmdW5jdGlvbiBDb2duaXRvVXNlckF0dHJpYnV0ZShfdGVtcCkge1xuICAgIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBOYW1lID0gX3JlZi5OYW1lLFxuICAgICAgVmFsdWUgPSBfcmVmLlZhbHVlO1xuICAgIHRoaXMuTmFtZSA9IE5hbWUgfHwgJyc7XG4gICAgdGhpcy5WYWx1ZSA9IFZhbHVlIHx8ICcnO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IHRoZSByZWNvcmQncyB2YWx1ZS5cbiAgICovXG4gIHZhciBfcHJvdG8gPSBDb2duaXRvVXNlckF0dHJpYnV0ZS5wcm90b3R5cGU7XG4gIF9wcm90by5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLlZhbHVlO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIHJlY29yZCdzIHZhbHVlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVGhlIG5ldyB2YWx1ZS5cbiAgICogQHJldHVybnMge0NvZ25pdG9Vc2VyQXR0cmlidXRlfSBUaGUgcmVjb3JkIGZvciBtZXRob2QgY2hhaW5pbmcuXG4gICAqLztcbiAgX3Byb3RvLnNldFZhbHVlID0gZnVuY3Rpb24gc2V0VmFsdWUodmFsdWUpIHtcbiAgICB0aGlzLlZhbHVlID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge3N0cmluZ30gdGhlIHJlY29yZCdzIG5hbWUuXG4gICAqLztcbiAgX3Byb3RvLmdldE5hbWUgPSBmdW5jdGlvbiBnZXROYW1lKCkge1xuICAgIHJldHVybiB0aGlzLk5hbWU7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgcmVjb3JkJ3MgbmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBUaGUgbmV3IG5hbWUuXG4gICAqIEByZXR1cm5zIHtDb2duaXRvVXNlckF0dHJpYnV0ZX0gVGhlIHJlY29yZCBmb3IgbWV0aG9kIGNoYWluaW5nLlxuICAgKi87XG4gIF9wcm90by5zZXROYW1lID0gZnVuY3Rpb24gc2V0TmFtZShuYW1lKSB7XG4gICAgdGhpcy5OYW1lID0gbmFtZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgcmVjb3JkLlxuICAgKi87XG4gIF9wcm90by50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBhIGZsYXQgb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgcmVjb3JkLlxuICAgKi87XG4gIF9wcm90by50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIE5hbWU6IHRoaXMuTmFtZSxcbiAgICAgIFZhbHVlOiB0aGlzLlZhbHVlXG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIENvZ25pdG9Vc2VyQXR0cmlidXRlO1xufSgpO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBDb2duaXRvVXNlckF0dHJpYnV0ZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserAttribute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserPool.js":
/*!************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoUserPool.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _Client = _interopRequireDefault(__webpack_require__(/*! ./Client */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/Client.js\"));\nvar _CognitoUser = _interopRequireDefault(__webpack_require__(/*! ./CognitoUser */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUser.js\"));\nvar _StorageHelper = _interopRequireDefault(__webpack_require__(/*! ./StorageHelper */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/StorageHelper.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar USER_POOL_ID_MAX_LENGTH = 55;\n\n/** @class */\nvar CognitoUserPool = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {string} data.endpoint Optional custom service endpoint.\n   * @param {object} data.fetchOptions Optional options for fetch API.\n   *        (only credentials option is supported)\n   * @param {object} data.Storage Optional storage object.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n   *        boolean flag indicating if the data collection is enabled\n   *        to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   */\n  function CognitoUserPool(data, wrapRefreshSessionCallback) {\n    var _ref = data || {},\n      UserPoolId = _ref.UserPoolId,\n      ClientId = _ref.ClientId,\n      endpoint = _ref.endpoint,\n      fetchOptions = _ref.fetchOptions,\n      AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n    if (UserPoolId.length > USER_POOL_ID_MAX_LENGTH || !/^[\\w-]+_[0-9a-zA-Z]+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n    var region = UserPoolId.split('_')[0];\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n    this.client = new _Client[\"default\"](region, endpoint, fetchOptions);\n\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n     * if no input value is provided.\n     */\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n    this.storage = data.Storage || new _StorageHelper[\"default\"]().getStorage();\n    if (wrapRefreshSessionCallback) {\n      this.wrapRefreshSessionCallback = wrapRefreshSessionCallback;\n    }\n  }\n\n  /**\n   * @returns {string} the user pool id\n   */\n  var _proto = CognitoUserPool.prototype;\n  _proto.getUserPoolId = function getUserPoolId() {\n    return this.userPoolId;\n  }\n\n  /**\n   * @returns {string} the user pool name\n   */;\n  _proto.getUserPoolName = function getUserPoolName() {\n    return this.getUserPoolId().split('_')[1];\n  }\n\n  /**\n   * @returns {string} the client id\n   */;\n  _proto.getClientId = function getClientId() {\n    return this.clientId;\n  }\n\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {(AttributeArg[])=} clientMetadata Client metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n    var _this = this;\n    var jsonReq = {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData(username)) {\n      jsonReq.UserContextData = this.getUserContextData(username);\n    }\n    this.client.request('SignUp', jsonReq, function (err, data) {\n      if (err) {\n        return callback(err, null);\n      }\n      var cognitoUser = {\n        Username: username,\n        Pool: _this,\n        Storage: _this.storage\n      };\n      var returnData = {\n        user: new _CognitoUser[\"default\"](cognitoUser),\n        userConfirmed: data.UserConfirmed,\n        userSub: data.UserSub,\n        codeDeliveryDetails: data.CodeDeliveryDetails\n      };\n      return callback(null, returnData);\n    });\n  }\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */;\n  _proto.getCurrentUser = function getCurrentUser() {\n    var lastUserKey = \"CognitoIdentityServiceProvider.\" + this.clientId + \".LastAuthUser\";\n    var lastAuthUser = this.storage.getItem(lastUserKey);\n    if (lastAuthUser) {\n      var cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n        Storage: this.storage\n      };\n      return new _CognitoUser[\"default\"](cognitoUser);\n    }\n    return null;\n  }\n\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   * @param {string} username the username for the context data\n   * @returns {string} the user context data\n   **/;\n  _proto.getUserContextData = function getUserContextData(username) {\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n      return undefined;\n    }\n    /* eslint-disable */\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n    /* eslint-enable */\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n      if (advancedSecurityData) {\n        var userContextData = {\n          EncodedData: advancedSecurityData\n        };\n        return userContextData;\n      }\n    }\n    return {};\n  };\n  return CognitoUserPool;\n}();\nexports[\"default\"] = CognitoUserPool;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserPool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserSession.js":
/*!***************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CognitoUserSession.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n/** @class */\nvar CognitoUserSession = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @param {CognitoRefreshToken=} RefreshToken The session's refresh token.\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @param {int} ClockDrift The saved computer's clock drift or undefined to force calculation.\n   */\n  function CognitoUserSession(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      IdToken = _ref.IdToken,\n      RefreshToken = _ref.RefreshToken,\n      AccessToken = _ref.AccessToken,\n      ClockDrift = _ref.ClockDrift;\n    if (AccessToken == null || IdToken == null) {\n      throw new Error('Id token and Access Token must be present.');\n    }\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n    this.clockDrift = ClockDrift === undefined ? this.calculateClockDrift() : ClockDrift;\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n  var _proto = CognitoUserSession.prototype;\n  _proto.getIdToken = function getIdToken() {\n    return this.idToken;\n  }\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */;\n  _proto.getRefreshToken = function getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */;\n  _proto.getAccessToken = function getAccessToken() {\n    return this.accessToken;\n  }\n\n  /**\n   * @returns {int} the session's clock drift\n   */;\n  _proto.getClockDrift = function getClockDrift() {\n    return this.clockDrift;\n  }\n\n  /**\n   * @returns {int} the computer's clock drift\n   */;\n  _proto.calculateClockDrift = function calculateClockDrift() {\n    var now = Math.floor(new Date() / 1000);\n    var iat = Math.min(this.accessToken.getIssuedAt(), this.idToken.getIssuedAt());\n    return now - iat;\n  }\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time (adjusted with clock drift)\n   * @returns {boolean} if the session is still valid\n   */;\n  _proto.isValid = function isValid() {\n    var now = Math.floor(new Date() / 1000);\n    var adjusted = now - this.clockDrift;\n    return adjusted < this.accessToken.getExpiration() && adjusted < this.idToken.getExpiration();\n  };\n  return CognitoUserSession;\n}();\nexports[\"default\"] = CognitoUserSession;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9Vc2VyU2Vzc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QixhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLG9CQUFvQjtBQUNqQyxhQUFhLEtBQUs7QUFDbEI7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxxQkFBcUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLG9CQUFvQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsS0FBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGVBQWUsS0FBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0NvZ25pdG9Vc2VyU2Vzc2lvbi5qcz8wNWM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG4vKiFcbiAqIENvcHlyaWdodCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuLyoqIEBjbGFzcyAqL1xudmFyIENvZ25pdG9Vc2VyU2Vzc2lvbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RzIGEgbmV3IENvZ25pdG9Vc2VyU2Vzc2lvbiBvYmplY3RcbiAgICogQHBhcmFtIHtDb2duaXRvSWRUb2tlbn0gSWRUb2tlbiBUaGUgc2Vzc2lvbidzIElkIHRva2VuLlxuICAgKiBAcGFyYW0ge0NvZ25pdG9SZWZyZXNoVG9rZW49fSBSZWZyZXNoVG9rZW4gVGhlIHNlc3Npb24ncyByZWZyZXNoIHRva2VuLlxuICAgKiBAcGFyYW0ge0NvZ25pdG9BY2Nlc3NUb2tlbn0gQWNjZXNzVG9rZW4gVGhlIHNlc3Npb24ncyBhY2Nlc3MgdG9rZW4uXG4gICAqIEBwYXJhbSB7aW50fSBDbG9ja0RyaWZ0IFRoZSBzYXZlZCBjb21wdXRlcidzIGNsb2NrIGRyaWZ0IG9yIHVuZGVmaW5lZCB0byBmb3JjZSBjYWxjdWxhdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIENvZ25pdG9Vc2VyU2Vzc2lvbihfdGVtcCkge1xuICAgIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBJZFRva2VuID0gX3JlZi5JZFRva2VuLFxuICAgICAgUmVmcmVzaFRva2VuID0gX3JlZi5SZWZyZXNoVG9rZW4sXG4gICAgICBBY2Nlc3NUb2tlbiA9IF9yZWYuQWNjZXNzVG9rZW4sXG4gICAgICBDbG9ja0RyaWZ0ID0gX3JlZi5DbG9ja0RyaWZ0O1xuICAgIGlmIChBY2Nlc3NUb2tlbiA9PSBudWxsIHx8IElkVG9rZW4gPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJZCB0b2tlbiBhbmQgQWNjZXNzIFRva2VuIG11c3QgYmUgcHJlc2VudC4nKTtcbiAgICB9XG4gICAgdGhpcy5pZFRva2VuID0gSWRUb2tlbjtcbiAgICB0aGlzLnJlZnJlc2hUb2tlbiA9IFJlZnJlc2hUb2tlbjtcbiAgICB0aGlzLmFjY2Vzc1Rva2VuID0gQWNjZXNzVG9rZW47XG4gICAgdGhpcy5jbG9ja0RyaWZ0ID0gQ2xvY2tEcmlmdCA9PT0gdW5kZWZpbmVkID8gdGhpcy5jYWxjdWxhdGVDbG9ja0RyaWZ0KCkgOiBDbG9ja0RyaWZ0O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtDb2duaXRvSWRUb2tlbn0gdGhlIHNlc3Npb24ncyBJZCB0b2tlblxuICAgKi9cbiAgdmFyIF9wcm90byA9IENvZ25pdG9Vc2VyU2Vzc2lvbi5wcm90b3R5cGU7XG4gIF9wcm90by5nZXRJZFRva2VuID0gZnVuY3Rpb24gZ2V0SWRUb2tlbigpIHtcbiAgICByZXR1cm4gdGhpcy5pZFRva2VuO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtDb2duaXRvUmVmcmVzaFRva2VufSB0aGUgc2Vzc2lvbidzIHJlZnJlc2ggdG9rZW5cbiAgICovO1xuICBfcHJvdG8uZ2V0UmVmcmVzaFRva2VuID0gZnVuY3Rpb24gZ2V0UmVmcmVzaFRva2VuKCkge1xuICAgIHJldHVybiB0aGlzLnJlZnJlc2hUb2tlbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7Q29nbml0b0FjY2Vzc1Rva2VufSB0aGUgc2Vzc2lvbidzIGFjY2VzcyB0b2tlblxuICAgKi87XG4gIF9wcm90by5nZXRBY2Nlc3NUb2tlbiA9IGZ1bmN0aW9uIGdldEFjY2Vzc1Rva2VuKCkge1xuICAgIHJldHVybiB0aGlzLmFjY2Vzc1Rva2VuO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtpbnR9IHRoZSBzZXNzaW9uJ3MgY2xvY2sgZHJpZnRcbiAgICovO1xuICBfcHJvdG8uZ2V0Q2xvY2tEcmlmdCA9IGZ1bmN0aW9uIGdldENsb2NrRHJpZnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvY2tEcmlmdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7aW50fSB0aGUgY29tcHV0ZXIncyBjbG9jayBkcmlmdFxuICAgKi87XG4gIF9wcm90by5jYWxjdWxhdGVDbG9ja0RyaWZ0ID0gZnVuY3Rpb24gY2FsY3VsYXRlQ2xvY2tEcmlmdCgpIHtcbiAgICB2YXIgbm93ID0gTWF0aC5mbG9vcihuZXcgRGF0ZSgpIC8gMTAwMCk7XG4gICAgdmFyIGlhdCA9IE1hdGgubWluKHRoaXMuYWNjZXNzVG9rZW4uZ2V0SXNzdWVkQXQoKSwgdGhpcy5pZFRva2VuLmdldElzc3VlZEF0KCkpO1xuICAgIHJldHVybiBub3cgLSBpYXQ7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgc2Vzc2lvbiBpcyBzdGlsbCB2YWxpZCBiYXNlZCBvbiBzZXNzaW9uIGV4cGlyeSBpbmZvcm1hdGlvbiBmb3VuZFxuICAgKiBpbiB0b2tlbnMgYW5kIHRoZSBjdXJyZW50IHRpbWUgKGFkanVzdGVkIHdpdGggY2xvY2sgZHJpZnQpXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBpZiB0aGUgc2Vzc2lvbiBpcyBzdGlsbCB2YWxpZFxuICAgKi87XG4gIF9wcm90by5pc1ZhbGlkID0gZnVuY3Rpb24gaXNWYWxpZCgpIHtcbiAgICB2YXIgbm93ID0gTWF0aC5mbG9vcihuZXcgRGF0ZSgpIC8gMTAwMCk7XG4gICAgdmFyIGFkanVzdGVkID0gbm93IC0gdGhpcy5jbG9ja0RyaWZ0O1xuICAgIHJldHVybiBhZGp1c3RlZCA8IHRoaXMuYWNjZXNzVG9rZW4uZ2V0RXhwaXJhdGlvbigpICYmIGFkanVzdGVkIDwgdGhpcy5pZFRva2VuLmdldEV4cGlyYXRpb24oKTtcbiAgfTtcbiAgcmV0dXJuIENvZ25pdG9Vc2VyU2Vzc2lvbjtcbn0oKTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gQ29nbml0b1VzZXJTZXNzaW9uOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserSession.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/CookieStorage.js":
/*!**********************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/CookieStorage.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar Cookies = _interopRequireWildcard(__webpack_require__(/*! js-cookie */ \"(ssr)/./node_modules/js-cookie/src/js.cookie.js\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n/** @class */\nvar CookieStorage = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CookieStorage object\n   * @param {object} data Creation options.\n   * @param {string} data.domain Cookies domain (default: domain of the page\n   * \t\t\t\twhere the cookie was created, excluding subdomains)\n   * @param {string} data.path Cookies path (default: '/')\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n   * @param {boolean} data.secure Cookie secure flag (default: true)\n   * @param {string} data.sameSite Cookie request behavior (default: null)\n   */\n  function CookieStorage(data) {\n    if (data === void 0) {\n      data = {};\n    }\n    if (data.domain) {\n      this.domain = data.domain;\n    }\n    if (data.path) {\n      this.path = data.path;\n    } else {\n      this.path = '/';\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n      this.expires = data.expires;\n    } else {\n      this.expires = 365;\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n      this.secure = data.secure;\n    } else {\n      this.secure = true;\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n      if (!['strict', 'lax', 'none'].includes(data.sameSite)) {\n        throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n      }\n      if (data.sameSite === 'none' && !this.secure) {\n        throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n      }\n      this.sameSite = data.sameSite;\n    } else {\n      this.sameSite = null;\n    }\n  }\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  var _proto = CookieStorage.prototype;\n  _proto.setItem = function setItem(key, value) {\n    var options = {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure\n    };\n    if (this.sameSite) {\n      options.sameSite = this.sameSite;\n    }\n    Cookies.set(key, value, options);\n    return Cookies.get(key);\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */;\n  _proto.getItem = function getItem(key) {\n    return Cookies.get(key);\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */;\n  _proto.removeItem = function removeItem(key) {\n    var options = {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure\n    };\n    if (this.sameSite) {\n      options.sameSite = this.sameSite;\n    }\n    return Cookies.remove(key, options);\n  }\n\n  /**\n   * This is used to clear the storage of optional\n   * items that were previously set\n   * @returns {} an empty object\n   */;\n  _proto.clear = function clear() {\n    var cookies = Cookies.get();\n    var numKeys = Object.keys(cookies).length;\n    for (var index = 0; index < numKeys; ++index) {\n      this.removeItem(Object.keys(cookies)[index]);\n    }\n    return {};\n  };\n  return CookieStorage;\n}();\nexports[\"default\"] = CookieStorage;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0Nvb2tpZVN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQixzQ0FBc0MsbUJBQU8sQ0FBQyxrRUFBVztBQUN6RCxpREFBaUQsZ0RBQWdELHVDQUF1QyxzQ0FBc0Msb0ZBQW9GLDREQUE0RDtBQUM5VCxxREFBcUQsNkNBQTZDLGNBQWMsNEVBQTRFLFNBQVMsb0JBQW9CLG1EQUFtRCwrQkFBK0IseUJBQXlCLGlCQUFpQixzRkFBc0YsdUJBQXVCLDJFQUEyRSxxRkFBcUYsc0NBQXNDLDRDQUE0QyxPQUFPLDhCQUE4Qix5QkFBeUIsYUFBYSwwQkFBMEI7QUFDenhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEIsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpQkFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXl3aW5kLy4vbm9kZV9tb2R1bGVzL2FtYXpvbi1jb2duaXRvLWlkZW50aXR5LWpzL2xpYi9Db29raWVTdG9yYWdlLmpzPzlhZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbnZhciBDb29raWVzID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcImpzLWNvb2tpZVwiKSk7XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBcImRlZmF1bHRcIjogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09ialtcImRlZmF1bHRcIl0gPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cbi8qKiBAY2xhc3MgKi9cbnZhciBDb29raWVTdG9yYWdlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBuZXcgQ29va2llU3RvcmFnZSBvYmplY3RcbiAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEgQ3JlYXRpb24gb3B0aW9ucy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGEuZG9tYWluIENvb2tpZXMgZG9tYWluIChkZWZhdWx0OiBkb21haW4gb2YgdGhlIHBhZ2VcbiAgICogXHRcdFx0XHR3aGVyZSB0aGUgY29va2llIHdhcyBjcmVhdGVkLCBleGNsdWRpbmcgc3ViZG9tYWlucylcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGEucGF0aCBDb29raWVzIHBhdGggKGRlZmF1bHQ6ICcvJylcbiAgICogQHBhcmFtIHtpbnRlZ2VyfSBkYXRhLmV4cGlyZXMgQ29va2llIGV4cGlyYXRpb24gKGluIGRheXMsIGRlZmF1bHQ6IDM2NSlcbiAgICogQHBhcmFtIHtib29sZWFufSBkYXRhLnNlY3VyZSBDb29raWUgc2VjdXJlIGZsYWcgKGRlZmF1bHQ6IHRydWUpXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhLnNhbWVTaXRlIENvb2tpZSByZXF1ZXN0IGJlaGF2aW9yIChkZWZhdWx0OiBudWxsKVxuICAgKi9cbiAgZnVuY3Rpb24gQ29va2llU3RvcmFnZShkYXRhKSB7XG4gICAgaWYgKGRhdGEgPT09IHZvaWQgMCkge1xuICAgICAgZGF0YSA9IHt9O1xuICAgIH1cbiAgICBpZiAoZGF0YS5kb21haW4pIHtcbiAgICAgIHRoaXMuZG9tYWluID0gZGF0YS5kb21haW47XG4gICAgfVxuICAgIGlmIChkYXRhLnBhdGgpIHtcbiAgICAgIHRoaXMucGF0aCA9IGRhdGEucGF0aDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wYXRoID0gJy8nO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsICdleHBpcmVzJykpIHtcbiAgICAgIHRoaXMuZXhwaXJlcyA9IGRhdGEuZXhwaXJlcztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5leHBpcmVzID0gMzY1O1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsICdzZWN1cmUnKSkge1xuICAgICAgdGhpcy5zZWN1cmUgPSBkYXRhLnNlY3VyZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZWN1cmUgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsICdzYW1lU2l0ZScpKSB7XG4gICAgICBpZiAoIVsnc3RyaWN0JywgJ2xheCcsICdub25lJ10uaW5jbHVkZXMoZGF0YS5zYW1lU2l0ZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgc2FtZVNpdGUgdmFsdWUgb2YgY29va2llU3RvcmFnZSBtdXN0IGJlIFwibGF4XCIsIFwic3RyaWN0XCIgb3IgXCJub25lXCIuJyk7XG4gICAgICB9XG4gICAgICBpZiAoZGF0YS5zYW1lU2l0ZSA9PT0gJ25vbmUnICYmICF0aGlzLnNlY3VyZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3NhbWVTaXRlID0gTm9uZSByZXF1aXJlcyB0aGUgU2VjdXJlIGF0dHJpYnV0ZSBpbiBsYXRlc3QgYnJvd3NlciB2ZXJzaW9ucy4nKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2FtZVNpdGUgPSBkYXRhLnNhbWVTaXRlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNhbWVTaXRlID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBpcyB1c2VkIHRvIHNldCBhIHNwZWNpZmljIGl0ZW0gaW4gc3RvcmFnZVxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gdGhlIGtleSBmb3IgdGhlIGl0ZW1cbiAgICogQHBhcmFtIHtvYmplY3R9IHZhbHVlIC0gdGhlIHZhbHVlXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IHZhbHVlIHRoYXQgd2FzIHNldFxuICAgKi9cbiAgdmFyIF9wcm90byA9IENvb2tpZVN0b3JhZ2UucHJvdG90eXBlO1xuICBfcHJvdG8uc2V0SXRlbSA9IGZ1bmN0aW9uIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xuICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgcGF0aDogdGhpcy5wYXRoLFxuICAgICAgZXhwaXJlczogdGhpcy5leHBpcmVzLFxuICAgICAgZG9tYWluOiB0aGlzLmRvbWFpbixcbiAgICAgIHNlY3VyZTogdGhpcy5zZWN1cmVcbiAgICB9O1xuICAgIGlmICh0aGlzLnNhbWVTaXRlKSB7XG4gICAgICBvcHRpb25zLnNhbWVTaXRlID0gdGhpcy5zYW1lU2l0ZTtcbiAgICB9XG4gICAgQ29va2llcy5zZXQoa2V5LCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIENvb2tpZXMuZ2V0KGtleSk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBpcyB1c2VkIHRvIGdldCBhIHNwZWNpZmljIGtleSBmcm9tIHN0b3JhZ2VcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIHRoZSBrZXkgZm9yIHRoZSBpdGVtXG4gICAqIFRoaXMgaXMgdXNlZCB0byBjbGVhciB0aGUgc3RvcmFnZVxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgZGF0YSBpdGVtXG4gICAqLztcbiAgX3Byb3RvLmdldEl0ZW0gPSBmdW5jdGlvbiBnZXRJdGVtKGtleSkge1xuICAgIHJldHVybiBDb29raWVzLmdldChrZXkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgaXMgdXNlZCB0byByZW1vdmUgYW4gaXRlbSBmcm9tIHN0b3JhZ2VcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIHRoZSBrZXkgYmVpbmcgc2V0XG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IHZhbHVlIC0gdmFsdWUgdGhhdCB3YXMgZGVsZXRlZFxuICAgKi87XG4gIF9wcm90by5yZW1vdmVJdGVtID0gZnVuY3Rpb24gcmVtb3ZlSXRlbShrZXkpIHtcbiAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgIHBhdGg6IHRoaXMucGF0aCxcbiAgICAgIGV4cGlyZXM6IHRoaXMuZXhwaXJlcyxcbiAgICAgIGRvbWFpbjogdGhpcy5kb21haW4sXG4gICAgICBzZWN1cmU6IHRoaXMuc2VjdXJlXG4gICAgfTtcbiAgICBpZiAodGhpcy5zYW1lU2l0ZSkge1xuICAgICAgb3B0aW9ucy5zYW1lU2l0ZSA9IHRoaXMuc2FtZVNpdGU7XG4gICAgfVxuICAgIHJldHVybiBDb29raWVzLnJlbW92ZShrZXksIG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgaXMgdXNlZCB0byBjbGVhciB0aGUgc3RvcmFnZSBvZiBvcHRpb25hbFxuICAgKiBpdGVtcyB0aGF0IHdlcmUgcHJldmlvdXNseSBzZXRcbiAgICogQHJldHVybnMge30gYW4gZW1wdHkgb2JqZWN0XG4gICAqLztcbiAgX3Byb3RvLmNsZWFyID0gZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgdmFyIGNvb2tpZXMgPSBDb29raWVzLmdldCgpO1xuICAgIHZhciBudW1LZXlzID0gT2JqZWN0LmtleXMoY29va2llcykubGVuZ3RoO1xuICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBudW1LZXlzOyArK2luZGV4KSB7XG4gICAgICB0aGlzLnJlbW92ZUl0ZW0oT2JqZWN0LmtleXMoY29va2llcylbaW5kZXhdKTtcbiAgICB9XG4gICAgcmV0dXJuIHt9O1xuICB9O1xuICByZXR1cm4gQ29va2llU3RvcmFnZTtcbn0oKTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gQ29va2llU3RvcmFnZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/CookieStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/DateHelper.js":
/*!*******************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/DateHelper.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\nvar DateHelper = /*#__PURE__*/function () {\n  function DateHelper() {}\n  var _proto = DateHelper.prototype;\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  _proto.getNowString = function getNowString() {\n    var now = new Date();\n    var weekDay = weekNames[now.getUTCDay()];\n    var month = monthNames[now.getUTCMonth()];\n    var day = now.getUTCDate();\n    var hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n    var minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n    var seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    var year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    var dateNow = weekDay + \" \" + month + \" \" + day + \" \" + hours + \":\" + minutes + \":\" + seconds + \" UTC \" + year;\n    return dateNow;\n  };\n  return DateHelper;\n}();\nexports[\"default\"] = DateHelper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL0RhdGVIZWxwZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXl3aW5kLy4vbm9kZV9tb2R1bGVzL2FtYXpvbi1jb2duaXRvLWlkZW50aXR5LWpzL2xpYi9EYXRlSGVscGVyLmpzPzRjYzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbi8qIVxuICogQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbnZhciBtb250aE5hbWVzID0gWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddO1xudmFyIHdlZWtOYW1lcyA9IFsnU3VuJywgJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0J107XG5cbi8qKiBAY2xhc3MgKi9cbnZhciBEYXRlSGVscGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRGF0ZUhlbHBlcigpIHt9XG4gIHZhciBfcHJvdG8gPSBEYXRlSGVscGVyLnByb3RvdHlwZTtcbiAgLyoqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjdXJyZW50IHRpbWUgaW4gXCJkZGQgTU1NIEQgSEg6bW06c3MgVVRDIFlZWVlcIiBmb3JtYXQuXG4gICAqL1xuICBfcHJvdG8uZ2V0Tm93U3RyaW5nID0gZnVuY3Rpb24gZ2V0Tm93U3RyaW5nKCkge1xuICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIHZhciB3ZWVrRGF5ID0gd2Vla05hbWVzW25vdy5nZXRVVENEYXkoKV07XG4gICAgdmFyIG1vbnRoID0gbW9udGhOYW1lc1tub3cuZ2V0VVRDTW9udGgoKV07XG4gICAgdmFyIGRheSA9IG5vdy5nZXRVVENEYXRlKCk7XG4gICAgdmFyIGhvdXJzID0gbm93LmdldFVUQ0hvdXJzKCk7XG4gICAgaWYgKGhvdXJzIDwgMTApIHtcbiAgICAgIGhvdXJzID0gXCIwXCIgKyBob3VycztcbiAgICB9XG4gICAgdmFyIG1pbnV0ZXMgPSBub3cuZ2V0VVRDTWludXRlcygpO1xuICAgIGlmIChtaW51dGVzIDwgMTApIHtcbiAgICAgIG1pbnV0ZXMgPSBcIjBcIiArIG1pbnV0ZXM7XG4gICAgfVxuICAgIHZhciBzZWNvbmRzID0gbm93LmdldFVUQ1NlY29uZHMoKTtcbiAgICBpZiAoc2Vjb25kcyA8IDEwKSB7XG4gICAgICBzZWNvbmRzID0gXCIwXCIgKyBzZWNvbmRzO1xuICAgIH1cbiAgICB2YXIgeWVhciA9IG5vdy5nZXRVVENGdWxsWWVhcigpO1xuXG4gICAgLy8gZGRkIE1NTSBEIEhIOm1tOnNzIFVUQyBZWVlZXG4gICAgdmFyIGRhdGVOb3cgPSB3ZWVrRGF5ICsgXCIgXCIgKyBtb250aCArIFwiIFwiICsgZGF5ICsgXCIgXCIgKyBob3VycyArIFwiOlwiICsgbWludXRlcyArIFwiOlwiICsgc2Vjb25kcyArIFwiIFVUQyBcIiArIHllYXI7XG4gICAgcmV0dXJuIGRhdGVOb3c7XG4gIH07XG4gIHJldHVybiBEYXRlSGVscGVyO1xufSgpO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBEYXRlSGVscGVyOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/DateHelper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/constants.js":
/*!***************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/Platform/constants.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports.FRAMEWORK = exports.AUTH_CATEGORY = void 0;\nvar FRAMEWORK = {\n  None: '0',\n  ReactNative: '1'\n};\nexports.FRAMEWORK = FRAMEWORK;\nvar AUTH_CATEGORY = 'auth';\nexports.AUTH_CATEGORY = AUTH_CATEGORY;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1BsYXRmb3JtL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsaUJBQWlCLEdBQUcscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGF5d2luZC8uL25vZGVfbW9kdWxlcy9hbWF6b24tY29nbml0by1pZGVudGl0eS1qcy9saWIvUGxhdGZvcm0vY29uc3RhbnRzLmpzP2I5ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLkZSQU1FV09SSyA9IGV4cG9ydHMuQVVUSF9DQVRFR09SWSA9IHZvaWQgMDtcbnZhciBGUkFNRVdPUksgPSB7XG4gIE5vbmU6ICcwJyxcbiAgUmVhY3ROYXRpdmU6ICcxJ1xufTtcbmV4cG9ydHMuRlJBTUVXT1JLID0gRlJBTUVXT1JLO1xudmFyIEFVVEhfQ0FURUdPUlkgPSAnYXV0aCc7XG5leHBvcnRzLkFVVEhfQ0FURUdPUlkgPSBBVVRIX0NBVEVHT1JZOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/Platform/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports.getUserAgent = exports[\"default\"] = exports.Platform = void 0;\nvar _version = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/version.js\");\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar BASE_USER_AGENT = \"aws-amplify/\" + _version.version;\nvar Platform = {\n  userAgent: BASE_USER_AGENT,\n  isReactNative: typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n};\nexports.Platform = Platform;\nvar getUserAgent = function getUserAgent() {\n  return Platform.userAgent;\n};\n\n/**\n * @deprecated use named import\n */\nexports.getUserAgent = getUserAgent;\nvar _default = Platform;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1BsYXRmb3JtL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtCQUFrQjtBQUNsQixvQkFBb0IsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0I7QUFDNUQsZUFBZSxtQkFBTyxDQUFDLDBGQUFXO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1BsYXRmb3JtL2luZGV4LmpzP2VhNDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmdldFVzZXJBZ2VudCA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZXhwb3J0cy5QbGF0Zm9ybSA9IHZvaWQgMDtcbnZhciBfdmVyc2lvbiA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG4vKiFcbiAqIENvcHlyaWdodCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG52YXIgQkFTRV9VU0VSX0FHRU5UID0gXCJhd3MtYW1wbGlmeS9cIiArIF92ZXJzaW9uLnZlcnNpb247XG52YXIgUGxhdGZvcm0gPSB7XG4gIHVzZXJBZ2VudDogQkFTRV9VU0VSX0FHRU5ULFxuICBpc1JlYWN0TmF0aXZlOiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJ1xufTtcbmV4cG9ydHMuUGxhdGZvcm0gPSBQbGF0Zm9ybTtcbnZhciBnZXRVc2VyQWdlbnQgPSBmdW5jdGlvbiBnZXRVc2VyQWdlbnQoKSB7XG4gIHJldHVybiBQbGF0Zm9ybS51c2VyQWdlbnQ7XG59O1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBuYW1lZCBpbXBvcnRcbiAqL1xuZXhwb3J0cy5nZXRVc2VyQWdlbnQgPSBnZXRVc2VyQWdlbnQ7XG52YXIgX2RlZmF1bHQgPSBQbGF0Zm9ybTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/version.js":
/*!*************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/Platform/version.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports.version = void 0;\n// generated by genversion\nvar version = '5.0.4';\nexports.version = version;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1BsYXRmb3JtL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCO0FBQ2xCLGVBQWU7QUFDZjtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1BsYXRmb3JtL3ZlcnNpb24uanM/NDc2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMudmVyc2lvbiA9IHZvaWQgMDtcbi8vIGdlbmVyYXRlZCBieSBnZW52ZXJzaW9uXG52YXIgdmVyc2lvbiA9ICc1LjAuNCc7XG5leHBvcnRzLnZlcnNpb24gPSB2ZXJzaW9uOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/StorageHelper.js":
/*!**********************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/StorageHelper.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = exports.MemoryStorage = void 0;\n/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar dataMemory = {};\n\n/** @class */\nvar MemoryStorage = /*#__PURE__*/function () {\n  function MemoryStorage() {}\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  MemoryStorage.setItem = function setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */;\n  MemoryStorage.getItem = function getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {boolean} return true\n   */;\n  MemoryStorage.removeItem = function removeItem(key) {\n    return delete dataMemory[key];\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */;\n  MemoryStorage.clear = function clear() {\n    dataMemory = {};\n    return dataMemory;\n  };\n  return MemoryStorage;\n}();\n/** @class */\nexports.MemoryStorage = MemoryStorage;\nvar StorageHelper = /*#__PURE__*/function () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  var _proto = StorageHelper.prototype;\n  _proto.getStorage = function getStorage() {\n    return this.storageWindow;\n  };\n  return StorageHelper;\n}();\nexports[\"default\"] = StorageHelper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1N0b3JhZ2VIZWxwZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCO0FBQ2xCLGtCQUFrQixHQUFHLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1N0b3JhZ2VIZWxwZXIuanM/ZTdkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZXhwb3J0cy5NZW1vcnlTdG9yYWdlID0gdm9pZCAwO1xuLyohXG4gKiBDb3B5cmlnaHQgQW1hem9uLmNvbSwgSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxudmFyIGRhdGFNZW1vcnkgPSB7fTtcblxuLyoqIEBjbGFzcyAqL1xudmFyIE1lbW9yeVN0b3JhZ2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBNZW1vcnlTdG9yYWdlKCkge31cbiAgLyoqXG4gICAqIFRoaXMgaXMgdXNlZCB0byBzZXQgYSBzcGVjaWZpYyBpdGVtIGluIHN0b3JhZ2VcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIHRoZSBrZXkgZm9yIHRoZSBpdGVtXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZSAtIHRoZSB2YWx1ZVxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB2YWx1ZSB0aGF0IHdhcyBzZXRcbiAgICovXG4gIE1lbW9yeVN0b3JhZ2Uuc2V0SXRlbSA9IGZ1bmN0aW9uIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xuICAgIGRhdGFNZW1vcnlba2V5XSA9IHZhbHVlO1xuICAgIHJldHVybiBkYXRhTWVtb3J5W2tleV07XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBpcyB1c2VkIHRvIGdldCBhIHNwZWNpZmljIGtleSBmcm9tIHN0b3JhZ2VcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIHRoZSBrZXkgZm9yIHRoZSBpdGVtXG4gICAqIFRoaXMgaXMgdXNlZCB0byBjbGVhciB0aGUgc3RvcmFnZVxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgZGF0YSBpdGVtXG4gICAqLztcbiAgTWVtb3J5U3RvcmFnZS5nZXRJdGVtID0gZnVuY3Rpb24gZ2V0SXRlbShrZXkpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGFNZW1vcnksIGtleSkgPyBkYXRhTWVtb3J5W2tleV0gOiB1bmRlZmluZWQ7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBpcyB1c2VkIHRvIHJlbW92ZSBhbiBpdGVtIGZyb20gc3RvcmFnZVxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gdGhlIGtleSBiZWluZyBzZXRcbiAgICogQHJldHVybnMge2Jvb2xlYW59IHJldHVybiB0cnVlXG4gICAqLztcbiAgTWVtb3J5U3RvcmFnZS5yZW1vdmVJdGVtID0gZnVuY3Rpb24gcmVtb3ZlSXRlbShrZXkpIHtcbiAgICByZXR1cm4gZGVsZXRlIGRhdGFNZW1vcnlba2V5XTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIGlzIHVzZWQgdG8gY2xlYXIgdGhlIHN0b3JhZ2VcbiAgICogQHJldHVybnMge3N0cmluZ30gbm90aGluZ1xuICAgKi87XG4gIE1lbW9yeVN0b3JhZ2UuY2xlYXIgPSBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICBkYXRhTWVtb3J5ID0ge307XG4gICAgcmV0dXJuIGRhdGFNZW1vcnk7XG4gIH07XG4gIHJldHVybiBNZW1vcnlTdG9yYWdlO1xufSgpO1xuLyoqIEBjbGFzcyAqL1xuZXhwb3J0cy5NZW1vcnlTdG9yYWdlID0gTWVtb3J5U3RvcmFnZTtcbnZhciBTdG9yYWdlSGVscGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIFRoaXMgaXMgdXNlZCB0byBnZXQgYSBzdG9yYWdlIG9iamVjdFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSB0aGUgc3RvcmFnZVxuICAgKi9cbiAgZnVuY3Rpb24gU3RvcmFnZUhlbHBlcigpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5zdG9yYWdlV2luZG93ID0gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgICAgIHRoaXMuc3RvcmFnZVdpbmRvdy5zZXRJdGVtKCdhd3MuY29nbml0by50ZXN0LWxzJywgMSk7XG4gICAgICB0aGlzLnN0b3JhZ2VXaW5kb3cucmVtb3ZlSXRlbSgnYXdzLmNvZ25pdG8udGVzdC1scycpO1xuICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgdGhpcy5zdG9yYWdlV2luZG93ID0gTWVtb3J5U3RvcmFnZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBpcyB1c2VkIHRvIHJldHVybiB0aGUgc3RvcmFnZVxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSB0aGUgc3RvcmFnZVxuICAgKi9cbiAgdmFyIF9wcm90byA9IFN0b3JhZ2VIZWxwZXIucHJvdG90eXBlO1xuICBfcHJvdG8uZ2V0U3RvcmFnZSA9IGZ1bmN0aW9uIGdldFN0b3JhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RvcmFnZVdpbmRvdztcbiAgfTtcbiAgcmV0dXJuIFN0b3JhZ2VIZWxwZXI7XG59KCk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IFN0b3JhZ2VIZWxwZXI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/StorageHelper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/UserAgent.js":
/*!******************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/UserAgent.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports.getAmplifyUserAgent = exports[\"default\"] = exports.appendToCognitoUserAgent = exports.addFrameworkToCognitoUserAgent = exports.addAuthCategoryToCognitoUserAgent = void 0;\nvar _Platform = __webpack_require__(/*! ./Platform */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/index.js\");\nvar _constants = __webpack_require__(/*! ./Platform/constants */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/Platform/constants.js\");\n// constructor\nfunction UserAgent() {}\n// public\nUserAgent.prototype.userAgent = (0, _Platform.getUserAgent)();\nvar appendToCognitoUserAgent = function appendToCognitoUserAgent(content) {\n  if (!content) {\n    return;\n  }\n  if (UserAgent.prototype.userAgent && !UserAgent.prototype.userAgent.includes(content)) {\n    UserAgent.prototype.userAgent = UserAgent.prototype.userAgent.concat(' ', content);\n  }\n  if (!UserAgent.prototype.userAgent || UserAgent.prototype.userAgent === '') {\n    UserAgent.prototype.userAgent = content;\n  }\n};\nexports.appendToCognitoUserAgent = appendToCognitoUserAgent;\nvar addAuthCategoryToCognitoUserAgent = function addAuthCategoryToCognitoUserAgent() {\n  UserAgent.category = _constants.AUTH_CATEGORY;\n};\nexports.addAuthCategoryToCognitoUserAgent = addAuthCategoryToCognitoUserAgent;\nvar addFrameworkToCognitoUserAgent = function addFrameworkToCognitoUserAgent(framework) {\n  UserAgent.framework = framework;\n};\nexports.addFrameworkToCognitoUserAgent = addFrameworkToCognitoUserAgent;\nvar getAmplifyUserAgent = function getAmplifyUserAgent(action) {\n  var uaCategoryAction = UserAgent.category ? \" \" + UserAgent.category : '';\n  var uaFramework = UserAgent.framework ? \" framework/\" + UserAgent.framework : '';\n  var userAgent = \"\" + UserAgent.prototype.userAgent + uaCategoryAction + uaFramework;\n  return userAgent;\n};\n\n// class for defining the amzn user-agent\nexports.getAmplifyUserAgent = getAmplifyUserAgent;\nvar _default = UserAgent;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL1VzZXJBZ2VudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsMkJBQTJCLEdBQUcsa0JBQWtCLEdBQUcsZ0NBQWdDLEdBQUcsc0NBQXNDLEdBQUcseUNBQXlDO0FBQ3hLLGdCQUFnQixtQkFBTyxDQUFDLHlGQUFZO0FBQ3BDLGlCQUFpQixtQkFBTyxDQUFDLHVHQUFzQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXl3aW5kLy4vbm9kZV9tb2R1bGVzL2FtYXpvbi1jb2duaXRvLWlkZW50aXR5LWpzL2xpYi9Vc2VyQWdlbnQuanM/NzBkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZ2V0QW1wbGlmeVVzZXJBZ2VudCA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZXhwb3J0cy5hcHBlbmRUb0NvZ25pdG9Vc2VyQWdlbnQgPSBleHBvcnRzLmFkZEZyYW1ld29ya1RvQ29nbml0b1VzZXJBZ2VudCA9IGV4cG9ydHMuYWRkQXV0aENhdGVnb3J5VG9Db2duaXRvVXNlckFnZW50ID0gdm9pZCAwO1xudmFyIF9QbGF0Zm9ybSA9IHJlcXVpcmUoXCIuL1BsYXRmb3JtXCIpO1xudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKFwiLi9QbGF0Zm9ybS9jb25zdGFudHNcIik7XG4vLyBjb25zdHJ1Y3RvclxuZnVuY3Rpb24gVXNlckFnZW50KCkge31cbi8vIHB1YmxpY1xuVXNlckFnZW50LnByb3RvdHlwZS51c2VyQWdlbnQgPSAoMCwgX1BsYXRmb3JtLmdldFVzZXJBZ2VudCkoKTtcbnZhciBhcHBlbmRUb0NvZ25pdG9Vc2VyQWdlbnQgPSBmdW5jdGlvbiBhcHBlbmRUb0NvZ25pdG9Vc2VyQWdlbnQoY29udGVudCkge1xuICBpZiAoIWNvbnRlbnQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKFVzZXJBZ2VudC5wcm90b3R5cGUudXNlckFnZW50ICYmICFVc2VyQWdlbnQucHJvdG90eXBlLnVzZXJBZ2VudC5pbmNsdWRlcyhjb250ZW50KSkge1xuICAgIFVzZXJBZ2VudC5wcm90b3R5cGUudXNlckFnZW50ID0gVXNlckFnZW50LnByb3RvdHlwZS51c2VyQWdlbnQuY29uY2F0KCcgJywgY29udGVudCk7XG4gIH1cbiAgaWYgKCFVc2VyQWdlbnQucHJvdG90eXBlLnVzZXJBZ2VudCB8fCBVc2VyQWdlbnQucHJvdG90eXBlLnVzZXJBZ2VudCA9PT0gJycpIHtcbiAgICBVc2VyQWdlbnQucHJvdG90eXBlLnVzZXJBZ2VudCA9IGNvbnRlbnQ7XG4gIH1cbn07XG5leHBvcnRzLmFwcGVuZFRvQ29nbml0b1VzZXJBZ2VudCA9IGFwcGVuZFRvQ29nbml0b1VzZXJBZ2VudDtcbnZhciBhZGRBdXRoQ2F0ZWdvcnlUb0NvZ25pdG9Vc2VyQWdlbnQgPSBmdW5jdGlvbiBhZGRBdXRoQ2F0ZWdvcnlUb0NvZ25pdG9Vc2VyQWdlbnQoKSB7XG4gIFVzZXJBZ2VudC5jYXRlZ29yeSA9IF9jb25zdGFudHMuQVVUSF9DQVRFR09SWTtcbn07XG5leHBvcnRzLmFkZEF1dGhDYXRlZ29yeVRvQ29nbml0b1VzZXJBZ2VudCA9IGFkZEF1dGhDYXRlZ29yeVRvQ29nbml0b1VzZXJBZ2VudDtcbnZhciBhZGRGcmFtZXdvcmtUb0NvZ25pdG9Vc2VyQWdlbnQgPSBmdW5jdGlvbiBhZGRGcmFtZXdvcmtUb0NvZ25pdG9Vc2VyQWdlbnQoZnJhbWV3b3JrKSB7XG4gIFVzZXJBZ2VudC5mcmFtZXdvcmsgPSBmcmFtZXdvcms7XG59O1xuZXhwb3J0cy5hZGRGcmFtZXdvcmtUb0NvZ25pdG9Vc2VyQWdlbnQgPSBhZGRGcmFtZXdvcmtUb0NvZ25pdG9Vc2VyQWdlbnQ7XG52YXIgZ2V0QW1wbGlmeVVzZXJBZ2VudCA9IGZ1bmN0aW9uIGdldEFtcGxpZnlVc2VyQWdlbnQoYWN0aW9uKSB7XG4gIHZhciB1YUNhdGVnb3J5QWN0aW9uID0gVXNlckFnZW50LmNhdGVnb3J5ID8gXCIgXCIgKyBVc2VyQWdlbnQuY2F0ZWdvcnkgOiAnJztcbiAgdmFyIHVhRnJhbWV3b3JrID0gVXNlckFnZW50LmZyYW1ld29yayA/IFwiIGZyYW1ld29yay9cIiArIFVzZXJBZ2VudC5mcmFtZXdvcmsgOiAnJztcbiAgdmFyIHVzZXJBZ2VudCA9IFwiXCIgKyBVc2VyQWdlbnQucHJvdG90eXBlLnVzZXJBZ2VudCArIHVhQ2F0ZWdvcnlBY3Rpb24gKyB1YUZyYW1ld29yaztcbiAgcmV0dXJuIHVzZXJBZ2VudDtcbn07XG5cbi8vIGNsYXNzIGZvciBkZWZpbmluZyB0aGUgYW16biB1c2VyLWFnZW50XG5leHBvcnRzLmdldEFtcGxpZnlVc2VyQWdlbnQgPSBnZXRBbXBsaWZ5VXNlckFnZW50O1xudmFyIF9kZWZhdWx0ID0gVXNlckFnZW50O1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/UserAgent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports.appendToCognitoUserAgent = exports.WordArray = exports.DateHelper = exports.CookieStorage = exports.CognitoUserSession = exports.CognitoUserPool = exports.CognitoUserAttribute = exports.CognitoUser = exports.CognitoRefreshToken = exports.CognitoIdToken = exports.CognitoAccessToken = exports.AuthenticationHelper = exports.AuthenticationDetails = void 0;\nvar _AuthenticationDetails = _interopRequireDefault(__webpack_require__(/*! ./AuthenticationDetails */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/AuthenticationDetails.js\"));\nexports.AuthenticationDetails = _AuthenticationDetails[\"default\"];\nvar _AuthenticationHelper = _interopRequireDefault(__webpack_require__(/*! ./AuthenticationHelper */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/AuthenticationHelper.js\"));\nexports.AuthenticationHelper = _AuthenticationHelper[\"default\"];\nvar _CognitoAccessToken = _interopRequireDefault(__webpack_require__(/*! ./CognitoAccessToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoAccessToken.js\"));\nexports.CognitoAccessToken = _CognitoAccessToken[\"default\"];\nvar _CognitoIdToken = _interopRequireDefault(__webpack_require__(/*! ./CognitoIdToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoIdToken.js\"));\nexports.CognitoIdToken = _CognitoIdToken[\"default\"];\nvar _CognitoRefreshToken = _interopRequireDefault(__webpack_require__(/*! ./CognitoRefreshToken */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoRefreshToken.js\"));\nexports.CognitoRefreshToken = _CognitoRefreshToken[\"default\"];\nvar _CognitoUser = _interopRequireDefault(__webpack_require__(/*! ./CognitoUser */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUser.js\"));\nexports.CognitoUser = _CognitoUser[\"default\"];\nvar _CognitoUserAttribute = _interopRequireDefault(__webpack_require__(/*! ./CognitoUserAttribute */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserAttribute.js\"));\nexports.CognitoUserAttribute = _CognitoUserAttribute[\"default\"];\nvar _CognitoUserPool = _interopRequireDefault(__webpack_require__(/*! ./CognitoUserPool */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserPool.js\"));\nexports.CognitoUserPool = _CognitoUserPool[\"default\"];\nvar _CognitoUserSession = _interopRequireDefault(__webpack_require__(/*! ./CognitoUserSession */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CognitoUserSession.js\"));\nexports.CognitoUserSession = _CognitoUserSession[\"default\"];\nvar _CookieStorage = _interopRequireDefault(__webpack_require__(/*! ./CookieStorage */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/CookieStorage.js\"));\nexports.CookieStorage = _CookieStorage[\"default\"];\nvar _DateHelper = _interopRequireDefault(__webpack_require__(/*! ./DateHelper */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/DateHelper.js\"));\nexports.DateHelper = _DateHelper[\"default\"];\nvar _UserAgent = __webpack_require__(/*! ./UserAgent */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/UserAgent.js\");\nexports.appendToCognitoUserAgent = _UserAgent.appendToCognitoUserAgent;\nvar _WordArray = _interopRequireDefault(__webpack_require__(/*! ./utils/WordArray */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/utils/WordArray.js\"));\nexports.WordArray = _WordArray[\"default\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtCQUFrQjtBQUNsQixnQ0FBZ0MsR0FBRyxpQkFBaUIsR0FBRyxrQkFBa0IsR0FBRyxxQkFBcUIsR0FBRywwQkFBMEIsR0FBRyx1QkFBdUIsR0FBRyw0QkFBNEIsR0FBRyxtQkFBbUIsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0IsR0FBRywwQkFBMEIsR0FBRyw0QkFBNEIsR0FBRyw2QkFBNkI7QUFDaFcsb0RBQW9ELG1CQUFPLENBQUMsNkdBQXlCO0FBQ3JGLDZCQUE2QjtBQUM3QixtREFBbUQsbUJBQU8sQ0FBQywyR0FBd0I7QUFDbkYsNEJBQTRCO0FBQzVCLGlEQUFpRCxtQkFBTyxDQUFDLHVHQUFzQjtBQUMvRSwwQkFBMEI7QUFDMUIsNkNBQTZDLG1CQUFPLENBQUMsK0ZBQWtCO0FBQ3ZFLHNCQUFzQjtBQUN0QixrREFBa0QsbUJBQU8sQ0FBQyx5R0FBdUI7QUFDakYsMkJBQTJCO0FBQzNCLDBDQUEwQyxtQkFBTyxDQUFDLHlGQUFlO0FBQ2pFLG1CQUFtQjtBQUNuQixtREFBbUQsbUJBQU8sQ0FBQywyR0FBd0I7QUFDbkYsNEJBQTRCO0FBQzVCLDhDQUE4QyxtQkFBTyxDQUFDLGlHQUFtQjtBQUN6RSx1QkFBdUI7QUFDdkIsaURBQWlELG1CQUFPLENBQUMsdUdBQXNCO0FBQy9FLDBCQUEwQjtBQUMxQiw0Q0FBNEMsbUJBQU8sQ0FBQyw2RkFBaUI7QUFDckUscUJBQXFCO0FBQ3JCLHlDQUF5QyxtQkFBTyxDQUFDLHVGQUFjO0FBQy9ELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQyxxRkFBYTtBQUN0QyxnQ0FBZ0M7QUFDaEMsd0NBQXdDLG1CQUFPLENBQUMsaUdBQW1CO0FBQ25FLGlCQUFpQjtBQUNqQix1Q0FBdUMsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGF5d2luZC8uL25vZGVfbW9kdWxlcy9hbWF6b24tY29nbml0by1pZGVudGl0eS1qcy9saWIvaW5kZXguanM/ZTQ5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuYXBwZW5kVG9Db2duaXRvVXNlckFnZW50ID0gZXhwb3J0cy5Xb3JkQXJyYXkgPSBleHBvcnRzLkRhdGVIZWxwZXIgPSBleHBvcnRzLkNvb2tpZVN0b3JhZ2UgPSBleHBvcnRzLkNvZ25pdG9Vc2VyU2Vzc2lvbiA9IGV4cG9ydHMuQ29nbml0b1VzZXJQb29sID0gZXhwb3J0cy5Db2duaXRvVXNlckF0dHJpYnV0ZSA9IGV4cG9ydHMuQ29nbml0b1VzZXIgPSBleHBvcnRzLkNvZ25pdG9SZWZyZXNoVG9rZW4gPSBleHBvcnRzLkNvZ25pdG9JZFRva2VuID0gZXhwb3J0cy5Db2duaXRvQWNjZXNzVG9rZW4gPSBleHBvcnRzLkF1dGhlbnRpY2F0aW9uSGVscGVyID0gZXhwb3J0cy5BdXRoZW50aWNhdGlvbkRldGFpbHMgPSB2b2lkIDA7XG52YXIgX0F1dGhlbnRpY2F0aW9uRGV0YWlscyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vQXV0aGVudGljYXRpb25EZXRhaWxzXCIpKTtcbmV4cG9ydHMuQXV0aGVudGljYXRpb25EZXRhaWxzID0gX0F1dGhlbnRpY2F0aW9uRGV0YWlsc1tcImRlZmF1bHRcIl07XG52YXIgX0F1dGhlbnRpY2F0aW9uSGVscGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9BdXRoZW50aWNhdGlvbkhlbHBlclwiKSk7XG5leHBvcnRzLkF1dGhlbnRpY2F0aW9uSGVscGVyID0gX0F1dGhlbnRpY2F0aW9uSGVscGVyW1wiZGVmYXVsdFwiXTtcbnZhciBfQ29nbml0b0FjY2Vzc1Rva2VuID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Db2duaXRvQWNjZXNzVG9rZW5cIikpO1xuZXhwb3J0cy5Db2duaXRvQWNjZXNzVG9rZW4gPSBfQ29nbml0b0FjY2Vzc1Rva2VuW1wiZGVmYXVsdFwiXTtcbnZhciBfQ29nbml0b0lkVG9rZW4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0NvZ25pdG9JZFRva2VuXCIpKTtcbmV4cG9ydHMuQ29nbml0b0lkVG9rZW4gPSBfQ29nbml0b0lkVG9rZW5bXCJkZWZhdWx0XCJdO1xudmFyIF9Db2duaXRvUmVmcmVzaFRva2VuID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Db2duaXRvUmVmcmVzaFRva2VuXCIpKTtcbmV4cG9ydHMuQ29nbml0b1JlZnJlc2hUb2tlbiA9IF9Db2duaXRvUmVmcmVzaFRva2VuW1wiZGVmYXVsdFwiXTtcbnZhciBfQ29nbml0b1VzZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0NvZ25pdG9Vc2VyXCIpKTtcbmV4cG9ydHMuQ29nbml0b1VzZXIgPSBfQ29nbml0b1VzZXJbXCJkZWZhdWx0XCJdO1xudmFyIF9Db2duaXRvVXNlckF0dHJpYnV0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vQ29nbml0b1VzZXJBdHRyaWJ1dGVcIikpO1xuZXhwb3J0cy5Db2duaXRvVXNlckF0dHJpYnV0ZSA9IF9Db2duaXRvVXNlckF0dHJpYnV0ZVtcImRlZmF1bHRcIl07XG52YXIgX0NvZ25pdG9Vc2VyUG9vbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vQ29nbml0b1VzZXJQb29sXCIpKTtcbmV4cG9ydHMuQ29nbml0b1VzZXJQb29sID0gX0NvZ25pdG9Vc2VyUG9vbFtcImRlZmF1bHRcIl07XG52YXIgX0NvZ25pdG9Vc2VyU2Vzc2lvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vQ29nbml0b1VzZXJTZXNzaW9uXCIpKTtcbmV4cG9ydHMuQ29nbml0b1VzZXJTZXNzaW9uID0gX0NvZ25pdG9Vc2VyU2Vzc2lvbltcImRlZmF1bHRcIl07XG52YXIgX0Nvb2tpZVN0b3JhZ2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0Nvb2tpZVN0b3JhZ2VcIikpO1xuZXhwb3J0cy5Db29raWVTdG9yYWdlID0gX0Nvb2tpZVN0b3JhZ2VbXCJkZWZhdWx0XCJdO1xudmFyIF9EYXRlSGVscGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9EYXRlSGVscGVyXCIpKTtcbmV4cG9ydHMuRGF0ZUhlbHBlciA9IF9EYXRlSGVscGVyW1wiZGVmYXVsdFwiXTtcbnZhciBfVXNlckFnZW50ID0gcmVxdWlyZShcIi4vVXNlckFnZW50XCIpO1xuZXhwb3J0cy5hcHBlbmRUb0NvZ25pdG9Vc2VyQWdlbnQgPSBfVXNlckFnZW50LmFwcGVuZFRvQ29nbml0b1VzZXJBZ2VudDtcbnZhciBfV29yZEFycmF5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91dGlscy9Xb3JkQXJyYXlcIikpO1xuZXhwb3J0cy5Xb3JkQXJyYXkgPSBfV29yZEFycmF5W1wiZGVmYXVsdFwiXTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/internals/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/internals/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports.addFrameworkToCognitoUserAgent = exports.addAuthCategoryToCognitoUserAgent = void 0;\nvar _UserAgent = __webpack_require__(/*! ../UserAgent */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/UserAgent.js\");\nexports.addAuthCategoryToCognitoUserAgent = _UserAgent.addAuthCategoryToCognitoUserAgent;\nexports.addFrameworkToCognitoUserAgent = _UserAgent.addFrameworkToCognitoUserAgent;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL2ludGVybmFscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsc0NBQXNDLEdBQUcseUNBQXlDO0FBQ2xGLGlCQUFpQixtQkFBTyxDQUFDLHNGQUFjO0FBQ3ZDLHlDQUF5QztBQUN6QyxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYXl3aW5kLy4vbm9kZV9tb2R1bGVzL2FtYXpvbi1jb2duaXRvLWlkZW50aXR5LWpzL2xpYi9pbnRlcm5hbHMvaW5kZXguanM/NWYwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuYWRkRnJhbWV3b3JrVG9Db2duaXRvVXNlckFnZW50ID0gZXhwb3J0cy5hZGRBdXRoQ2F0ZWdvcnlUb0NvZ25pdG9Vc2VyQWdlbnQgPSB2b2lkIDA7XG52YXIgX1VzZXJBZ2VudCA9IHJlcXVpcmUoXCIuLi9Vc2VyQWdlbnRcIik7XG5leHBvcnRzLmFkZEF1dGhDYXRlZ29yeVRvQ29nbml0b1VzZXJBZ2VudCA9IF9Vc2VyQWdlbnQuYWRkQXV0aENhdGVnb3J5VG9Db2duaXRvVXNlckFnZW50O1xuZXhwb3J0cy5hZGRGcmFtZXdvcmtUb0NvZ25pdG9Vc2VyQWdlbnQgPSBfVXNlckFnZW50LmFkZEZyYW1ld29ya1RvQ29nbml0b1VzZXJBZ2VudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/internals/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/utils/WordArray.js":
/*!************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/utils/WordArray.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _cryptoSecureRandomInt = _interopRequireDefault(__webpack_require__(/*! ./cryptoSecureRandomInt */ \"(ssr)/./node_modules/amazon-cognito-identity-js/lib/utils/cryptoSecureRandomInt.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n  // Shortcuts\n  var words = wordArray.words;\n  var sigBytes = wordArray.sigBytes;\n\n  // Convert\n  var hexChars = [];\n  for (var i = 0; i < sigBytes; i++) {\n    var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n    hexChars.push((bite >>> 4).toString(16));\n    hexChars.push((bite & 0x0f).toString(16));\n  }\n  return hexChars.join('');\n}\nvar WordArray = /*#__PURE__*/function () {\n  function WordArray(words, sigBytes) {\n    words = this.words = words || [];\n    if (sigBytes != undefined) {\n      this.sigBytes = sigBytes;\n    } else {\n      this.sigBytes = words.length * 4;\n    }\n  }\n  var _proto = WordArray.prototype;\n  _proto.random = function random(nBytes) {\n    var words = [];\n    for (var i = 0; i < nBytes; i += 4) {\n      words.push((0, _cryptoSecureRandomInt[\"default\"])());\n    }\n    return new WordArray(words, nBytes);\n  };\n  _proto.toString = function toString() {\n    return hexStringify(this);\n  };\n  return WordArray;\n}();\nexports[\"default\"] = WordArray;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL3V0aWxzL1dvcmRBcnJheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLG9EQUFvRCxtQkFBTyxDQUFDLG1IQUF5QjtBQUNyRix1Q0FBdUMsdUNBQXVDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBLFdBQVcsV0FBVztBQUN0QixZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsY0FBYztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGF5d2luZC8uL25vZGVfbW9kdWxlcy9hbWF6b24tY29nbml0by1pZGVudGl0eS1qcy9saWIvdXRpbHMvV29yZEFycmF5LmpzPzNjNzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbnZhciBfY3J5cHRvU2VjdXJlUmFuZG9tSW50ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9jcnlwdG9TZWN1cmVSYW5kb21JbnRcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG4vKipcbiAqIEhleCBlbmNvZGluZyBzdHJhdGVneS5cbiAqIENvbnZlcnRzIGEgd29yZCBhcnJheSB0byBhIGhleCBzdHJpbmcuXG4gKiBAcGFyYW0ge1dvcmRBcnJheX0gd29yZEFycmF5IFRoZSB3b3JkIGFycmF5LlxuICogQHJldHVybiB7c3RyaW5nfSBUaGUgaGV4IHN0cmluZy5cbiAqIEBzdGF0aWNcbiAqL1xuZnVuY3Rpb24gaGV4U3RyaW5naWZ5KHdvcmRBcnJheSkge1xuICAvLyBTaG9ydGN1dHNcbiAgdmFyIHdvcmRzID0gd29yZEFycmF5LndvcmRzO1xuICB2YXIgc2lnQnl0ZXMgPSB3b3JkQXJyYXkuc2lnQnl0ZXM7XG5cbiAgLy8gQ29udmVydFxuICB2YXIgaGV4Q2hhcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaWdCeXRlczsgaSsrKSB7XG4gICAgdmFyIGJpdGUgPSB3b3Jkc1tpID4+PiAyXSA+Pj4gMjQgLSBpICUgNCAqIDggJiAweGZmO1xuICAgIGhleENoYXJzLnB1c2goKGJpdGUgPj4+IDQpLnRvU3RyaW5nKDE2KSk7XG4gICAgaGV4Q2hhcnMucHVzaCgoYml0ZSAmIDB4MGYpLnRvU3RyaW5nKDE2KSk7XG4gIH1cbiAgcmV0dXJuIGhleENoYXJzLmpvaW4oJycpO1xufVxudmFyIFdvcmRBcnJheSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFdvcmRBcnJheSh3b3Jkcywgc2lnQnl0ZXMpIHtcbiAgICB3b3JkcyA9IHRoaXMud29yZHMgPSB3b3JkcyB8fCBbXTtcbiAgICBpZiAoc2lnQnl0ZXMgIT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnNpZ0J5dGVzID0gc2lnQnl0ZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2lnQnl0ZXMgPSB3b3Jkcy5sZW5ndGggKiA0O1xuICAgIH1cbiAgfVxuICB2YXIgX3Byb3RvID0gV29yZEFycmF5LnByb3RvdHlwZTtcbiAgX3Byb3RvLnJhbmRvbSA9IGZ1bmN0aW9uIHJhbmRvbShuQnl0ZXMpIHtcbiAgICB2YXIgd29yZHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5CeXRlczsgaSArPSA0KSB7XG4gICAgICB3b3Jkcy5wdXNoKCgwLCBfY3J5cHRvU2VjdXJlUmFuZG9tSW50W1wiZGVmYXVsdFwiXSkoKSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgV29yZEFycmF5KHdvcmRzLCBuQnl0ZXMpO1xuICB9O1xuICBfcHJvdG8udG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gaGV4U3RyaW5naWZ5KHRoaXMpO1xuICB9O1xuICByZXR1cm4gV29yZEFycmF5O1xufSgpO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBXb3JkQXJyYXk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/utils/WordArray.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/amazon-cognito-identity-js/lib/utils/cryptoSecureRandomInt.js":
/*!************************************************************************************!*\
  !*** ./node_modules/amazon-cognito-identity-js/lib/utils/cryptoSecureRandomInt.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nexports.__esModule = true;\nexports[\"default\"] = cryptoSecureRandomInt;\nvar crypto;\n\n// Native crypto from window (Browser)\nif (typeof window !== 'undefined' && window.crypto) {\n  crypto = window.crypto;\n}\n\n// Native (experimental IE 11) crypto from window (Browser)\nif (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n  crypto = window.msCrypto;\n}\n\n// Native crypto from global (NodeJS)\nif (!crypto && typeof global !== 'undefined' && global.crypto) {\n  crypto = global.crypto;\n}\n\n// Native crypto import via require (NodeJS)\nif (!crypto && \"function\" === 'function') {\n  try {\n    crypto = __webpack_require__(/*! crypto */ \"crypto\");\n  } catch (err) {}\n}\n\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nfunction cryptoSecureRandomInt() {\n  if (crypto) {\n    // Use getRandomValues method (Browser)\n    if (typeof crypto.getRandomValues === 'function') {\n      try {\n        return crypto.getRandomValues(new Uint32Array(1))[0];\n      } catch (err) {}\n    }\n\n    // Use randomBytes method (NodeJS)\n    if (typeof crypto.randomBytes === 'function') {\n      try {\n        return crypto.randomBytes(4).readInt32LE();\n      } catch (err) {}\n    }\n  }\n  throw new Error('Native crypto module could not be used to get secure random number.');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL3V0aWxzL2NyeXB0b1NlY3VyZVJhbmRvbUludC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxVQUFjO0FBQzdCO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHNCQUFRO0FBQzdCLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BheXdpbmQvLi9ub2RlX21vZHVsZXMvYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMvbGliL3V0aWxzL2NyeXB0b1NlY3VyZVJhbmRvbUludC5qcz9mZTg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBjcnlwdG9TZWN1cmVSYW5kb21JbnQ7XG52YXIgY3J5cHRvO1xuXG4vLyBOYXRpdmUgY3J5cHRvIGZyb20gd2luZG93IChCcm93c2VyKVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5jcnlwdG8pIHtcbiAgY3J5cHRvID0gd2luZG93LmNyeXB0bztcbn1cblxuLy8gTmF0aXZlIChleHBlcmltZW50YWwgSUUgMTEpIGNyeXB0byBmcm9tIHdpbmRvdyAoQnJvd3NlcilcbmlmICghY3J5cHRvICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5tc0NyeXB0bykge1xuICBjcnlwdG8gPSB3aW5kb3cubXNDcnlwdG87XG59XG5cbi8vIE5hdGl2ZSBjcnlwdG8gZnJvbSBnbG9iYWwgKE5vZGVKUylcbmlmICghY3J5cHRvICYmIHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnICYmIGdsb2JhbC5jcnlwdG8pIHtcbiAgY3J5cHRvID0gZ2xvYmFsLmNyeXB0bztcbn1cblxuLy8gTmF0aXZlIGNyeXB0byBpbXBvcnQgdmlhIHJlcXVpcmUgKE5vZGVKUylcbmlmICghY3J5cHRvICYmIHR5cGVvZiByZXF1aXJlID09PSAnZnVuY3Rpb24nKSB7XG4gIHRyeSB7XG4gICAgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG4gIH0gY2F0Y2ggKGVycikge31cbn1cblxuLypcbiAqIENyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZSBwc2V1ZG9yYW5kb20gbnVtYmVyIGdlbmVyYXRvclxuICogQXMgTWF0aC5yYW5kb20oKSBpcyBjcnlwdG9ncmFwaGljYWxseSBub3Qgc2FmZSB0byB1c2VcbiAqL1xuZnVuY3Rpb24gY3J5cHRvU2VjdXJlUmFuZG9tSW50KCkge1xuICBpZiAoY3J5cHRvKSB7XG4gICAgLy8gVXNlIGdldFJhbmRvbVZhbHVlcyBtZXRob2QgKEJyb3dzZXIpXG4gICAgaWYgKHR5cGVvZiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDMyQXJyYXkoMSkpWzBdO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7fVxuICAgIH1cblxuICAgIC8vIFVzZSByYW5kb21CeXRlcyBtZXRob2QgKE5vZGVKUylcbiAgICBpZiAodHlwZW9mIGNyeXB0by5yYW5kb21CeXRlcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyg0KS5yZWFkSW50MzJMRSgpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7fVxuICAgIH1cbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ05hdGl2ZSBjcnlwdG8gbW9kdWxlIGNvdWxkIG5vdCBiZSB1c2VkIHRvIGdldCBzZWN1cmUgcmFuZG9tIG51bWJlci4nKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/amazon-cognito-identity-js/lib/utils/cryptoSecureRandomInt.js\n");

/***/ })

};
;